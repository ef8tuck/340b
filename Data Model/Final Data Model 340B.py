# Databricks notebook source
# MAGIC %sql
# MAGIC INSERT INTO  psas_di_dev.`340b_gold`.mhs_rna_cust_acct(
# MAGIC   CUST_ACCT_ID,	CUST_ACCT_NAM,	NATL_GRP_CD,	NATL_GRP_NAM,	NATL_SUB_GRP_CD,	NATL_SUB_GRP_NAM,	ACCT_CHN_ID,	CHAIN_NAM,CUST_RGN_NUM,	CUST_RGN_NAM,	CUST_DSTRCT_NUM,	CUST_DSTRCT_NAM,	MCK_KU_DSCSA,	MCK_KU_ACCT_CLAS,	MCK_KU_ACCT_CLAS_DESC,
# MAGIC 	MCK_KU_GPOS,	MCK_KU_GPOS_DESC,	MCK_KU_GPO_ACCT
# MAGIC )
# MAGIC SELECT A.CUST_ACCT_ID, A.CUST_ACCT_NAM, A.NATL_GRP_CD, B.NATL_GRP_NAM, A.NATL_SUB_GRP_CD, C.NATL_SUB_GRP_NAM, A.ACCT_CHN_ID, D.CUST_GRP_NAM AS CHAIN_NAM, A.CUST_RGN_NUM, F.CUST_RGN_NAM, A.CUST_DSTRCT_NUM, G.CUST_DSTRCT_NAM, E.MCK_KU_DSCSA, E.MCK_KU_ACCT_CLAS, E.MCK_KU_ACCT_CLAS_DESC, E.MCK_KU_GPOS, E.MCK_KU_GPOS_DESC, E.MCK_KU_GPO_ACCT 
# MAGIC FROM ((((((DEV_PSAS_DB.RPT.T_IW_CUST_ACCT A 
# MAGIC 	LEFT JOIN DEV_PSAS_DB.RPT.T_NATL_GRP B ON ((A.NATL_GRP_CD = B.NATL_GRP_CD))) 
# MAGIC 	LEFT JOIN DEV_PSAS_DB.RPT.T_NATL_SUB_GRP C 
# MAGIC 		ON (((A.NATL_GRP_CD = C.NATL_GRP_CD) AND (A.NATL_SUB_GRP_CD = C.NATL_SUB_GRP_CD)))) 
# MAGIC 	LEFT JOIN DEV_PSAS_DB.RPT.T_IW_CUST_GRP D ON ((A.ACCT_CHN_ID = D.CUST_GRP_CD))) 
# MAGIC 	LEFT JOIN DEV_PSAS_DB.RPT.T_DM_VSTX_CUST E ON ((A.CUST_ACCT_ID = E.CUST_ACCT_ID))) 
# MAGIC 	LEFT JOIN DEV_PSAS_DB.RPT.T_CUST_RGN F ON ((((A.NATL_GRP_CD = F.NATL_GRP_CD) AND (A.NATL_SUB_GRP_CD = F.NATL_SUB_GRP_CD)) AND (A.CUST_RGN_NUM = F.CUST_RGN_NUM)))) 
# MAGIC 	LEFT JOIN DEV_PSAS_DB.RPT.T_CUST_DSTRCT G ON (((((A.NATL_GRP_CD = G.NATL_GRP_CD) AND (A.NATL_SUB_GRP_CD = G.NATL_SUB_GRP_CD)) AND (A.CUST_RGN_NUM = G.CUST_RGN_NUM)) AND (A.CUST_DSTRCT_NUM = G.CUST_DSTRCT_NUM))));

# COMMAND ----------

# MAGIC %sql
# MAGIC INSERT INTO  psas_di_dev.`340b_gold`.t_phs_audit_part1 ( CUST_ACCT_ID, CUST_ACCT_NAME, ACCT_CLASSIFICATION, CUST_CHN_ID,  NATIONAL_GRP_CD,CHAIN_NAM, NATIONAL_GRP_NAME, NATIONAL_SUBGRP_CD, NATIONAL_SUBGRP_NAME, REGION_CD, REGION_NAME, DELIVERY_DOC, DIST_CHANNEL, HOME_DC_ID, UPDATE_340BID,PHS_340B_ID,  DEA_FAMILY,UPDATE_ACTIVESTATUS,ACTIVE_CUST_IND,  ENTITY_TYPE,ACTIVATION_DATE,COGS_RX,COGS_OTC,DLVRY_RTE_NUM,DLVRY_RTE_STOP_NUM,DEA_NUM,BUS_TYP_CD,RX_BILL_PLAN,GPO_ID,GPO_ACCT,UPDATE_SAP )
# MAGIC SELECT 
# MAGIC V.CUST_ACCT_ID,
# MAGIC CASE WHEN (A.CUST_ACCT_NAME IS NULL OR A.CUST_ACCT_NAME <> CA.CUST_ACCT_NAM) THEN CA.CUST_ACCT_NAM ELSE A.CUST_ACCT_NAME END AS CUST_ACCT_NAME,
# MAGIC CASE WHEN (A.ACCT_CLASSIFICATION IS NULL OR A.ACCT_CLASSIFICATION <> V.MCK_KU_ACCT_CLAS) THEN V.MCK_KU_ACCT_CLAS ELSE A.ACCT_CLASSIFICATION END AS ACCT_CLASSIFICATION, 
# MAGIC CASE WHEN (A.CUST_CHN_ID IS NULL OR A.CUST_CHN_ID <> CA.ACCT_CHN_ID) THEN CA.ACCT_CHN_ID ELSE  A.CUST_CHN_ID END AS CUST_CHN_ID,
# MAGIC CASE WHEN (A.NATIONAL_GRP_CD IS NULL OR A.NATIONAL_GRP_CD <> CA.NATL_GRP_CD) THEN CA.NATL_GRP_CD ELSE A.NATIONAL_GRP_CD END AS NATIONAL_GRP_CD, 
# MAGIC CASE WHEN ((A.CHAIN_NAM IS NULL AND C.CHAIN_NAM IS NOT NULL) OR A.CHAIN_NAM <> C.CHAIN_NAM) THEN C.CHAIN_NAM ELSE A.CHAIN_NAM END AS CHAIN_NAM,
# MAGIC CASE WHEN ((A.NATIONAL_GRP_NAME IS NULL AND N.NATL_GRP_NAM IS NOT NULL) OR A.NATIONAL_GRP_NAME <> N.NATL_GRP_NAM) THEN N.NATL_GRP_NAM ELSE A.NATIONAL_GRP_NAME END AS NATIONAL_GRP_NAME,
# MAGIC CASE WHEN (A.NATIONAL_SUBGRP_CD IS NULL OR A.NATIONAL_SUBGRP_CD <> CA.NATL_SUB_GRP_CD) THEN CA.NATL_SUB_GRP_CD ELSE A.NATIONAL_SUBGRP_CD END NATIONAL_SUBGRP_CD,
# MAGIC CASE WHEN ((A.NATIONAL_SUBGRP_NAME IS NULL AND M.NATL_SUB_GRP_NAM IS NOT NULL) OR A.NATIONAL_SUBGRP_NAME <> M.NATL_SUB_GRP_NAM) THEN M.NATL_SUB_GRP_NAM ELSE A.NATIONAL_SUBGRP_NAME END as NATIONAL_SUBGRP_NAME,
# MAGIC CASE WHEN (A.REGION_CD IS NULL OR A.REGION_CD <> CA.CUST_RGN_NUM) THEN CA.CUST_RGN_NUM ELSE A.REGION_CD END AS REGION_CD ,
# MAGIC CASE WHEN ((A.REGION_NAME IS NULL AND M.CUST_RGN_NAM IS NOT NULL) OR A.REGION_NAME <> M.CUST_RGN_NAM) THEN M.CUST_RGN_NAM ELSE A.REGION_NAME END as REGION_NAME, 
# MAGIC CASE WHEN (A.DELIVERY_DOC IS NULL OR A.DELIVERY_DOC <> CA.DLVRY_DOC_IND)  THEN CA.DLVRY_DOC_IND ELSE A.DELIVERY_DOC END AS DELIVERY_DOC,
# MAGIC CASE WHEN (A.DIST_CHANNEL IS NULL OR A.DIST_CHANNEL <> V.MCK_KU_CHNL_TYP) THEN V.MCK_KU_CHNL_TYP ELSE A.DIST_CHANNEL END AS DIST_CHANNEL,
# MAGIC CASE WHEN (A.HOME_DC_ID IS NULL OR A.HOME_DC_ID <> CA.HOME_DC_ID) THEN CA.HOME_DC_ID ELSE A.HOME_DC_ID END AS HOME_DC_ID,
# MAGIC CASE WHEN A.CUST_ACCT_ID = V.CUST_ACCT_ID AND (A.PHS_340B_ID IS NOT NULL AND A.PHS_340B_ID <> V.XFD_KU_340B_ID) AND V.XFD_KU_340B_ID <> '00000000000000000000' THEN CURRENT_TIMESTAMP() ELSE UPDATE_340BID END AS UPDATE_340BID,
# MAGIC CASE WHEN (A.PHS_340B_ID IS NULL OR A.PHS_340B_ID <> V.XFD_KU_340B_ID) AND V.XFD_KU_340B_ID <> '00000000000000000000' AND A.CUST_ACCT_ID = V.CUST_ACCT_ID THEN RTRIM(V.XFD_KU_340B_ID)  ELSE A.PHS_340B_ID END AS PHS_340B_ID,
# MAGIC CASE WHEN (A.DEA_FAMILY IS NULL OR A.DEA_FAMILY <> V.XFD_KU_DEA_FAMILY) THEN V.XFD_KU_DEA_FAMILY ELSE A.DEA_FAMILY END AS DEA_FAMILY,
# MAGIC CASE WHEN (A.ACTIVE_CUST_IND IS NOT NULL AND A.ACTIVE_CUST_IND <> CA.ACTIVE_CUST_IND) THEN CURRENT_TIMESTAMP() ELSE UPDATE_ACTIVESTATUS END as UPDATE_ACTIVESTATUS,
# MAGIC CASE WHEN (A.ACTIVE_CUST_IND IS NULL OR A.ACTIVE_CUST_IND <> CA.ACTIVE_CUST_IND) THEN CA.ACTIVE_CUST_IND  ELSE A.ACTIVE_CUST_IND END AS ACTIVE_CUST_IND , 
# MAGIC CASE WHEN ENTITY_TYPE IS NOT NULL THEN NULL ELSE ENTITY_TYPE END AS ENTITY_TYPE ,
# MAGIC CASE WHEN ((A.ACTIVATION_DATE IS NULL AND V.MCK_KU_ACTV_DT IS NOT NULL) OR A.ACTIVATION_DATE <> V.MCK_KU_ACTV_DT) THEN V.MCK_KU_ACTV_DT ELSE A.ACTIVATION_DATE END  as ACTIVATION_DATE,
# MAGIC CASE WHEN (A.COGS_RX IS NULL OR A.COGS_RX <> CAST(COGS.RX_BILL_PLAN_PCT AS INT)) THEN CAST(COGS.RX_BILL_PLAN_PCT AS INT) ELSE A.COGS_RX END as COGS_RX,
# MAGIC CASE WHEN (A.COGS_OTC IS NULL OR A.COGS_OTC <> CAST(COGS.OTC_BILL_PLAN_PCT AS INT)) THEN CAST(COGS.OTC_BILL_PLAN_PCT AS INT) ELSE A.COGS_OTC END as COGS_OTC,
# MAGIC CASE WHEN (A.DLVRY_RTE_NUM IS NULL OR A.DLVRY_RTE_NUM <> CA.DLVRY_RTE_NUM) THEN CA.DLVRY_RTE_NUM ELSE A.DLVRY_RTE_NUM END as DLVRY_RTE_NUM , 
# MAGIC CASE WHEN (A.DLVRY_RTE_STOP_NUM IS NULL OR A.DLVRY_RTE_STOP_NUM <> CA.DLVRY_RTE_STOP_NUM) THEN CA.DLVRY_RTE_STOP_NUM ELSE A.DLVRY_RTE_STOP_NUM END AS DLVRY_RTE_STOP_NUM , 
# MAGIC CASE WHEN (A.DEA_NUM IS NULL OR A.DEA_NUM <> CA.DEA_NUM) THEN CA.DEA_NUM ELSE A.DEA_NUM END AS DEA_NUM,
# MAGIC CASE WHEN (A.BUS_TYP_CD IS NULL OR A.BUS_TYP_CD <> CAA.SAP_BUS_TYP_CD) THEN  CAA.SAP_BUS_TYP_CD ELSE A.BUS_TYP_CD END  AS BUS_TYP_CD, 
# MAGIC CASE WHEN (A.RX_BILL_PLAN IS NULL OR A.RX_BILL_PLAN <> COGS.RX_BILL_PLAN_CD) THEN COGS.RX_BILL_PLAN_CD ELSE A.RX_BILL_PLAN END as RX_BILL_PLAN,
# MAGIC CASE WHEN (A.GPO_ID IS NULL OR A.GPO_ID <> V.MCK_KU_GPOS) THEN V.MCK_KU_GPOS ELSE A.GPO_ID END  as GPO_ID ,
# MAGIC CASE WHEN (A.GPO_ACCT IS NULL OR A.GPO_ACCT <> V.MCK_KU_GPO_ACCT) THEN V.MCK_KU_GPO_ACCT ELSE A.GPO_ACCT END AS GPO_ACCT,
# MAGIC CASE WHEN A.UPDATE_SAP IS NULL AND A.ACTIVATION_DATE IS NOT NULL THEN CURRENT_TIMESTAMP() ELSE A.UPDATE_SAP END AS UPDATE_SAP
# MAGIC FROM dev_PSAS_DB.RPT.T_DM_VSTX_CUST V 
# MAGIC
# MAGIC LEFT OUTER JOIN psas_di_dev.340b_gold.T_PHS_AUDIT_PART1 A ON V.CUST_ACCT_ID = A.CUST_ACCT_ID
# MAGIC
# MAGIC LEFT OUTER JOIN dev_PSAS_DB.RPT.T_IW_CUST_ACCT CA ON V.CUST_ACCT_ID = CA.CUST_ACCT_ID
# MAGIC
# MAGIC LEFT OUTER  JOIN dev_PSAS_DB.RPT.T_IW_CUST_ACCT_EXT CAA on  CA.CUST_ACCT_ID =  CAA.CUST_ACCT_ID
# MAGIC
# MAGIC LEFT OUTER JOIN psas_di_dev.`340b_brnz`.T_CHAIN_LOOKUP C ON C.CHAIN_ID = A.CUST_CHN_ID
# MAGIC
# MAGIC LEFT OUTER JOIN psas_di_dev.`340b_brnz`.T_NATL_GRP_LOOOKUP N ON N.NATL_GRP_ID = A.NATIONAL_GRP_CD
# MAGIC
# MAGIC LEFT OUTER  JOIN dev_PSAS_DB.RPT.T_CUST_BILL_PLAN COGS ON A.CUST_ACCT_ID = COGS.CUST_ACCT_ID
# MAGIC
# MAGIC LEFT OUTER JOIN psas_di_dev.340b_gold.mhs_rna_cust_acct M ON A.CUST_ACCT_ID = M.CUST_ACCT_ID
# MAGIC
# MAGIC LEFT OUTER JOIN ((SELECT CUST_ACCT_ID, ADDR_L1 || ', ' || CTY_NAM || ', ' || ST_CD || ' ' || ZIP_CD AS ADDRESS_INVOICE FROM dev_PSAS_DB.RPT.T_CUST_ACCT_ADDR_HIST WHERE ADDR_TYP_CD IN ('M') AND LAST_EFF_DT > CURRENT_TIMESTAMP())) MAIL_ADDR ON V.CUST_ACCT_ID = MAIL_ADDR.CUST_ACCT_ID
# MAGIC
# MAGIC LEFT OUTER JOIN ((SELECT CUST_ACCT_ID, ADDR_L1 || ', ' || CTY_NAM || ', ' || ST_CD || ' ' || ZIP_CD AS ADDRESS_INVOICE FROM dev_PSAS_DB.RPT.T_CUST_ACCT_ADDR_HIST WHERE ADDR_TYP_CD IN ('M') AND LAST_EFF_DT > CURRENT_TIMESTAMP())) SHIP_ADDR ON V.CUST_ACCT_ID = SHIP_ADDR.CUST_ACCT_ID
# MAGIC
# MAGIC LEFT OUTER JOIN (SELECT S.CUST_ACCT_ID AS CUST_ACCT_ID, CAST(SUM(SLS_CR_AMT) AS FLOAT) AS TOTAL_NET_SALES 
# MAGIC FROM dev_PSAS_DB.RPT.T_NET_CUST_SALES S INNER JOIN psas_di_dev.340b_gold.T_PHS_AUDIT_PART1 A ON S.CUST_ACCT_ID = A.CUST_ACCT_ID
# MAGIC
# MAGIC LEFT OUTER JOIN ((SELECT CUST_ACCT_ID, ADDR_L1 || ', ' || CTY_NAM || ', ' || ST_CD || ' ' || ZIP_CD AS ADDRESS_DELVRY FROM DEV_PSAS_DB.RPT.T_CUST_ACCT_ADDR_HIST WHERE ADDR_TYP_CD IN ('D') AND LAST_EFF_DT > CURRENT_TIMESTAMP()))  ADDRS ON A.CUST_ACCT_ID = ADDRS.CUST_ACCT_ID
# MAGIC
# MAGIC WHERE PROC_WRK_DT BETWEEN DATE_TRUNC('MONTH', ADD_MONTHS(CURRENT_TIMESTAMP(),-1)) AND LAST_DAY(ADD_MONTHS(CURRENT_TIMESTAMP(),-1)) 
# MAGIC GROUP BY S.CUST_ACCT_ID) TOTAL_SALES ON TOTAL_SALES.CUST_ACCT_ID=V.CUST_ACCT_ID
# MAGIC
# MAGIC WHERE (V.MCK_KU_ACCT_CLAS IN ('002','003','004','005') OR (CA.NATL_GRP_CD = '0240' AND V.MCK_KU_ACCT_CLAS not in ('004','005')) OR (V.MCK_KU_CHNL_TYP = '20'))
# MAGIC AND A.CUST_ACCT_ID IS NULL
# MAGIC AND CA.NATL_GRP_CD NOT IN ('0041','0571','0664','0771')
# MAGIC AND POSITION(' TEMPLATE' IN CA.CUST_ACCT_NAM) = 0;
# MAGIC
# MAGIC -- UPDATE psas_di_dev.`340b_gold`.t_phs_audit_part1 A
# MAGIC -- SET A.CHAIN_NAM = M.CHAIN_NAM
# MAGIC -- FROM SBX_PSAS_DB.MHS_RNA.MHS_RNA_CUST_ACCT M
# MAGIC -- WHERE (A.CHAIN_NAM IS NULL OR A.CHAIN_NAM <> M.CHAIN_NAM)
# MAGIC -- AND (A.CUST_CHN_ID IS NOT NULL AND A.CUST_CHN_ID <> '')
# MAGIC -- AND A.CUST_ACCT_ID = M.CUST_ACCT_ID;
# MAGIC
# MAGIC MERGE INTO psas_di_dev.`340b_gold`.t_phs_audit_part1 A
# MAGIC USING psas_di_dev.`340b_gold`.mhs_rna_cust_acct M
# MAGIC ON A.CUST_ACCT_ID = M.CUST_ACCT_ID
# MAGIC WHEN MATCHED AND (A.CHAIN_NAM IS NULL OR A.CHAIN_NAM <> M.CHAIN_NAM) AND (A.CUST_CHN_ID IS NOT NULL AND A.CUST_CHN_ID <> '')
# MAGIC THEN UPDATE SET A.CHAIN_NAM = M.CHAIN_NAM;
# MAGIC
# MAGIC -- UPDATE psas_di_dev.`340b_gold`.t_phs_audit_part1 A
# MAGIC -- SET A.NATIONAL_GRP_NAME = M.NATL_GRP_NAM
# MAGIC -- FROM SBX_PSAS_DB.MHS_RNA.MHS_RNA_CUST_ACCT M
# MAGIC -- WHERE (A.NATIONAL_GRP_NAME IS NULL OR A.NATIONAL_GRP_NAME <> M.NATL_GRP_NAM) AND (A.NATIONAL_GRP_CD IS NOT NULL AND A.NATIONAL_GRP_CD <> '')
# MAGIC -- AND A.CUST_ACCT_ID = M.CUST_ACCT_ID;
# MAGIC
# MAGIC MERGE INTO psas_di_dev.`340b_gold`.t_phs_audit_part1 A
# MAGIC USING psas_di_dev.`340b_gold`.mhs_rna_cust_acct M
# MAGIC ON A.CUST_ACCT_ID = M.CUST_ACCT_ID
# MAGIC WHEN MATCHED AND (A.NATIONAL_GRP_NAME IS NULL OR A.NATIONAL_GRP_NAME <> M.NATL_GRP_NAM) AND (A.NATIONAL_GRP_CD IS NOT NULL AND A.NATIONAL_GRP_CD <> '')
# MAGIC THEN UPDATE SET A.NATIONAL_GRP_NAME = M.NATL_GRP_NAM;
# MAGIC
# MAGIC UPDATE psas_di_dev.`340b_gold`.t_phs_audit_part1 A
# MAGIC SET A.REGION_NAME = NULL
# MAGIC WHERE (A.REGION_CD = '' OR A.REGION_CD IS NULL) AND (A.REGION_NAME <> '' OR A.REGION_NAME IS NOT NULL);
# MAGIC
# MAGIC -- CHANGE FROM BLANK
# MAGIC -- UPDATE psas_di_dev.`340b_gold`.t_phs_audit_part1 A
# MAGIC -- SET UPDATE_340BID = CURRENT_TIMESTAMP()
# MAGIC -- FROM DEV_PSAS_DB.RPT.T_DM_VSTX_CUST V 
# MAGIC -- WHERE A.CUST_ACCT_ID = V.CUST_ACCT_ID
# MAGIC -- AND A.PHS_340B_ID IS NULL AND V.XFD_KU_340B_ID <> '00000000000000000000';
# MAGIC
# MAGIC MERGE INTO psas_di_dev.`340b_gold`.t_phs_audit_part1 A
# MAGIC USING DEV_PSAS_DB.RPT.T_DM_VSTX_CUST V
# MAGIC ON A.CUST_ACCT_ID = V.CUST_ACCT_ID
# MAGIC WHEN MATCHED AND A.PHS_340B_ID IS NULL AND V.XFD_KU_340B_ID <> '00000000000000000000'
# MAGIC THEN UPDATE SET UPDATE_340BID = CURRENT_TIMESTAMP();
# MAGIC
# MAGIC -- UPDATE psas_di_dev.`340b_gold`.t_phs_audit_part1 A -- CLEAR OUT 340B IDS THAT SHOULD BE NULL
# MAGIC -- SET A.PHS_340B_ID = NULL
# MAGIC -- FROM PRD_PSAS_DB.RPT.T_DM_VSTX_CUST V
# MAGIC -- WHERE V.XFD_KU_340B_ID = '00000000000000000000'
# MAGIC -- AND A.PHS_340B_ID IS NOT NULL
# MAGIC -- AND A.CUST_ACCT_ID = V.CUST_ACCT_ID;
# MAGIC
# MAGIC MERGE INTO psas_di_dev.`340b_gold`.t_phs_audit_part1 A
# MAGIC USING DEV_PSAS_DB.RPT.T_DM_VSTX_CUST V
# MAGIC ON A.CUST_ACCT_ID = V.CUST_ACCT_ID
# MAGIC WHEN MATCHED AND  V.XFD_KU_340B_ID = '00000000000000000000' AND A.PHS_340B_ID IS NOT NULL
# MAGIC THEN UPDATE SET A.PHS_340B_ID = NULL;
# MAGIC
# MAGIC
# MAGIC UPDATE psas_di_dev.`340b_gold`.t_phs_audit_part1
# MAGIC SET ENTITY_TYPE = SUBSTRING(PHS_340B_ID,1,3)
# MAGIC WHERE LENGTH(PHS_340B_ID) > 0 OR (ENTITY_TYPE IS NOT NULL AND ENTITY_TYPE <> SUBSTRING(PHS_340B_ID,1,3));
# MAGIC
# MAGIC UPDATE psas_di_dev.`340b_gold`.t_phs_audit_part1
# MAGIC SET ENTITY_TYPE = 'CH'
# MAGIC WHERE ENTITY_TYPE = 'CH1';
# MAGIC
# MAGIC
# MAGIC --UPDATE MAILING ADDRESS
# MAGIC -- UPDATE psas_di_dev.`340b_gold`.t_phs_audit_part1 A
# MAGIC -- SET A.ADDR_INVOICE = TEMP.ADDRESS_INVOICE
# MAGIC -- FROM
# MAGIC -- (SELECT CUST_ACCT_ID, ADDR_L1 || ', ' || CTY_NAM || ', ' || ST_CD || ' ' || ZIP_CD AS ADDRESS_INVOICE
# MAGIC -- FROM DEV_PSAS_DB.RPT.T_CUST_ACCT_ADDR_HIST
# MAGIC -- WHERE ADDR_TYP_CD IN ('M') AND LAST_EFF_DT > CURRENT_TIMESTAMP()) TEMP
# MAGIC -- WHERE (A.ADDR_INVOICE IS NULL OR A.ADDR_INVOICE <> TEMP.ADDRESS_INVOICE)
# MAGIC -- AND A.CUST_ACCT_ID = TEMP.CUST_ACCT_ID;
# MAGIC
# MAGIC MERGE INTO psas_di_dev.`340b_gold`.t_phs_audit_part1 A
# MAGIC USING (
# MAGIC     SELECT CUST_ACCT_ID, 
# MAGIC            ADDR_L1 || ', ' || CTY_NAM || ', ' || ST_CD || ' ' || ZIP_CD AS ADDRESS_INVOICE
# MAGIC     FROM DEV_PSAS_DB.RPT.T_CUST_ACCT_ADDR_HIST
# MAGIC     WHERE ADDR_TYP_CD IN ('M') 
# MAGIC       AND LAST_EFF_DT > CURRENT_TIMESTAMP()
# MAGIC ) TEMP
# MAGIC ON A.CUST_ACCT_ID = TEMP.CUST_ACCT_ID
# MAGIC WHEN MATCHED AND (A.ADDR_INVOICE IS NULL OR A.ADDR_INVOICE <> TEMP.ADDRESS_INVOICE) THEN
# MAGIC UPDATE SET A.ADDR_INVOICE = TEMP.ADDRESS_INVOICE;
# MAGIC
# MAGIC -- UPDATE SHIP TO ADDRESS
# MAGIC -- UPDATE psas_di_dev.`340b_gold`.t_phs_audit_part1 A
# MAGIC -- SET A.ADDR_DELIVERY = TEMP.ADDRESS_DELVRY
# MAGIC -- FROM
# MAGIC -- (SELECT CUST_ACCT_ID, ADDR_L1 || ', ' || CTY_NAM || ', ' || ST_CD || ' ' || ZIP_CD AS ADDRESS_DELVRY
# MAGIC -- FROM DEV_PSAS_DB.RPT.T_CUST_ACCT_ADDR_HIST
# MAGIC -- WHERE ADDR_TYP_CD IN ('D') AND LAST_EFF_DT > CURRENT_TIMESTAMP()) TEMP
# MAGIC -- WHERE (A.ADDR_DELIVERY IS NULL OR A.ADDR_DELIVERY <> TEMP.ADDRESS_DELVRY)
# MAGIC -- AND A.CUST_ACCT_ID = TEMP.CUST_ACCT_ID;
# MAGIC
# MAGIC
# MAGIC MERGE INTO psas_di_dev.`340b_gold`.t_phs_audit_part1 A
# MAGIC USING (
# MAGIC     SELECT CUST_ACCT_ID, ADDR_L1 || ', ' || CTY_NAM || ', ' || ST_CD || ' ' || ZIP_CD AS ADDRESS_DELVRY
# MAGIC     FROM DEV_PSAS_DB.RPT.T_CUST_ACCT_ADDR_HIST
# MAGIC     WHERE ADDR_TYP_CD IN ('D') AND LAST_EFF_DT > CURRENT_TIMESTAMP()
# MAGIC ) TEMP
# MAGIC ON A.CUST_ACCT_ID = TEMP.CUST_ACCT_ID
# MAGIC WHEN MATCHED AND (A.ADDR_DELIVERY IS NULL OR A.ADDR_DELIVERY <> TEMP.ADDRESS_DELVRY) THEN
# MAGIC UPDATE SET A.ADDR_DELIVERY = TEMP.ADDRESS_DELVRY;
# MAGIC
# MAGIC
# MAGIC -- UPDATE psas_di_dev.`340b_gold`.t_phs_audit_part1 A
# MAGIC -- SET A.SALES_REP = TEMP.SALES_REP
# MAGIC -- FROM (SELECT CUST_ACCT_ID, SLSPRSN_1ST_NAM || ' ' || SLSPRSN_LAST_NAM AS SALES_REP
# MAGIC -- FROM PRD_PSAS_DB.RPT.T_IW_CUST_ACCT CA INNER JOIN PRD_PSAS_DB.RPT.T_IW_SLSPRSN SP
# MAGIC -- ON CA.SLSPRSN_ID = SP.SLSPRSN_ID)TEMP
# MAGIC -- WHERE (A.SALES_REP IS NULL OR A.SALES_REP <> TEMP.SALES_REP)
# MAGIC -- AND A.CUST_ACCT_ID = TEMP.CUST_ACCT_ID;
# MAGIC
# MAGIC MERGE INTO psas_di_dev.`340b_gold`.t_phs_audit_part1 A
# MAGIC USING (
# MAGIC     SELECT 
# MAGIC         CA.CUST_ACCT_ID, 
# MAGIC         SP.SLSPRSN_1ST_NAM || ' ' || SP.SLSPRSN_LAST_NAM AS SALES_REP
# MAGIC     FROM 
# MAGIC         DEV_PSAS_DB.RPT.T_IW_CUST_ACCT CA 
# MAGIC     INNER JOIN 
# MAGIC         DEV_PSAS_DB.RPT.T_IW_SLSPRSN SP
# MAGIC     ON 
# MAGIC         CA.SLSPRSN_ID = SP.SLSPRSN_ID
# MAGIC ) TEMP
# MAGIC ON A.CUST_ACCT_ID = TEMP.CUST_ACCT_ID
# MAGIC WHEN MATCHED AND (A.SALES_REP IS NULL OR A.SALES_REP <> TEMP.SALES_REP) THEN
# MAGIC UPDATE SET A.SALES_REP = TEMP.SALES_REP;
# MAGIC
# MAGIC -- SALES PERSON
# MAGIC -- UPDATE psas_di_dev.`340b_gold`.t_phs_audit_part1 A
# MAGIC -- SET A.SALES_REP = TEMP.SALES_REP
# MAGIC -- FROM (SELECT CUST_ACCT_ID, SLSPRSN_1ST_NAM || ' ' || SLSPRSN_LAST_NAM AS SALES_REP
# MAGIC -- FROM DEV_PSAS_DB.RPT.T_IW_CUST_ACCT CA INNER JOIN DEV_PSAS_DB.RPT.T_IW_SLSPRSN SP
# MAGIC -- ON CA.SLSPRSN_ID = SP.SLSPRSN_ID)TEMP
# MAGIC -- WHERE (A.SALES_REP IS NULL OR A.SALES_REP <> TEMP.SALES_REP)
# MAGIC -- AND A.CUST_ACCT_ID = TEMP.CUST_ACCT_ID;
# MAGIC
# MAGIC -- SALES PERSON
# MAGIC MERGE INTO psas_di_dev.`340b_gold`.t_phs_audit_part1 A
# MAGIC USING (
# MAGIC     SELECT 
# MAGIC         CA.CUST_ACCT_ID, 
# MAGIC         SP.SLSPRSN_1ST_NAM || ' ' || SP.SLSPRSN_LAST_NAM AS SALES_REP
# MAGIC     FROM 
# MAGIC         DEV_PSAS_DB.RPT.T_IW_CUST_ACCT CA 
# MAGIC     INNER JOIN 
# MAGIC         DEV_PSAS_DB.RPT.T_IW_SLSPRSN SP
# MAGIC     ON 
# MAGIC         CA.SLSPRSN_ID = SP.SLSPRSN_ID
# MAGIC ) TEMP
# MAGIC ON A.CUST_ACCT_ID = TEMP.CUST_ACCT_ID
# MAGIC WHEN MATCHED AND (A.SALES_REP IS NULL OR A.SALES_REP <> TEMP.SALES_REP) THEN
# MAGIC UPDATE SET A.SALES_REP = TEMP.SALES_REP;
# MAGIC
# MAGIC -- RESET SALES
# MAGIC UPDATE psas_di_dev.`340b_gold`.t_phs_audit_part1 A
# MAGIC SET A.SALES_LSTMTH = 0, A.SALES_CURMTH = 0;
# MAGIC
# MAGIC -- PREVIOUS MONTH'S SALES (NOT LAST MONTH OF SALES) (DYNAMIC "WHERE" CONDITION)
# MAGIC -- UPDATE psas_di_dev.`340b_gold`.t_phs_audit_part1 A
# MAGIC -- SET A.SALES_LSTMTH = TEMP.TOTAL_NET_SALES
# MAGIC -- FROM
# MAGIC -- (SELECT S.CUST_ACCT_ID AS CUST_ACCT_ID, CAST(SUM(SLS_CR_AMT) AS FLOAT) AS TOTAL_NET_SALES 
# MAGIC -- FROM PRD_PSAS_DB.RPT.T_NET_CUST_SALES S INNER JOIN psas_di_dev.`340b_gold`.t_phs_audit_part1 A
# MAGIC -- ON S.CUST_ACCT_ID = A.CUST_ACCT_ID
# MAGIC -- WHERE PROC_WRK_DT BETWEEN DATE_TRUNC('MONTH', ADD_MONTHS(CURRENT_TIMESTAMP(),-1)) AND LAST_DAY(ADD_MONTHS(CURRENT_TIMESTAMP(),-1)) 
# MAGIC -- GROUP BY S.CUST_ACCT_ID)TEMP
# MAGIC -- WHERE A.CUST_ACCT_ID = TEMP.CUST_ACCT_ID;
# MAGIC
# MAGIC
# MAGIC MERGE INTO psas_di_dev.`340b_gold`.t_phs_audit_part1 A
# MAGIC USING (
# MAGIC     SELECT 
# MAGIC         S.CUST_ACCT_ID AS CUST_ACCT_ID, 
# MAGIC         CAST(SUM(SLS_CR_AMT) AS FLOAT) AS TOTAL_NET_SALES 
# MAGIC     FROM 
# MAGIC         DEV_PSAS_DB.RPT.T_NET_CUST_SALES S 
# MAGIC     INNER JOIN 
# MAGIC         psas_di_dev.`340b_gold`.t_phs_audit_part1 A
# MAGIC     ON 
# MAGIC         S.CUST_ACCT_ID = A.CUST_ACCT_ID
# MAGIC     WHERE 
# MAGIC         PROC_WRK_DT BETWEEN DATE_TRUNC('MONTH', ADD_MONTHS(CURRENT_TIMESTAMP(), -1)) 
# MAGIC         AND LAST_DAY(ADD_MONTHS(CURRENT_TIMESTAMP(), -1)) 
# MAGIC     GROUP BY 
# MAGIC         S.CUST_ACCT_ID
# MAGIC ) TEMP
# MAGIC ON A.CUST_ACCT_ID = TEMP.CUST_ACCT_ID
# MAGIC WHEN MATCHED THEN 
# MAGIC     UPDATE SET A.SALES_LSTMTH = TEMP.TOTAL_NET_SALES;
# MAGIC
# MAGIC
# MAGIC -- CURRENT MONTH'S SALES (DYNAMIC "WHERE" CONDITION)
# MAGIC -- UPDATE psas_di_dev.`340b_gold`.t_phs_audit_part1 A
# MAGIC -- SET A.SALES_CURMTH = TEMP.TOTAL_NET_SALES
# MAGIC -- FROM
# MAGIC -- (SELECT S.CUST_ACCT_ID AS CUST_ACCT_ID, CAST(SUM(SLS_CR_AMT) AS FLOAT) AS TOTAL_NET_SALES 
# MAGIC -- FROM PRD_PSAS_DB.RPT.T_NET_CUST_SALES S INNER JOIN psas_di_dev.`340b_gold`.t_phs_audit_part1 A
# MAGIC -- ON S.CUST_ACCT_ID = A.CUST_ACCT_ID
# MAGIC -- WHERE PROC_WRK_DT BETWEEN DATE_TRUNC('MONTH', ADD_MONTHS(CURRENT_TIMESTAMP(),0)) AND LAST_DAY(ADD_MONTHS(CURRENT_TIMESTAMP(),0)) 
# MAGIC -- GROUP BY S.CUST_ACCT_ID)TEMP
# MAGIC -- WHERE A.CUST_ACCT_ID = TEMP.CUST_ACCT_ID;
# MAGIC
# MAGIC -- CURRENT MONTH'S SALES (DYNAMIC "WHERE" CONDITION)
# MAGIC MERGE INTO psas_di_dev.`340b_gold`.t_phs_audit_part1 A
# MAGIC USING (
# MAGIC     SELECT S.CUST_ACCT_ID AS CUST_ACCT_ID, 
# MAGIC            CAST(SUM(SLS_CR_AMT) AS FLOAT) AS TOTAL_NET_SALES 
# MAGIC     FROM DEV_PSAS_DB.RPT.T_NET_CUST_SALES S 
# MAGIC     INNER JOIN psas_di_dev.`340b_gold`.t_phs_audit_part1 A
# MAGIC     ON S.CUST_ACCT_ID = A.CUST_ACCT_ID
# MAGIC     WHERE PROC_WRK_DT BETWEEN DATE_TRUNC('MONTH', ADD_MONTHS(CURRENT_TIMESTAMP(), 0)) 
# MAGIC                           AND LAST_DAY(ADD_MONTHS(CURRENT_TIMESTAMP(), 0)) 
# MAGIC     GROUP BY S.CUST_ACCT_ID
# MAGIC ) TEMP
# MAGIC ON A.CUST_ACCT_ID = TEMP.CUST_ACCT_ID
# MAGIC WHEN MATCHED THEN 
# MAGIC UPDATE SET A.SALES_CURMTH = TEMP.TOTAL_NET_SALES;
# MAGIC
# MAGIC -- UPDATE psas_di_dev.`340b_gold`.t_phs_audit_part1 A
# MAGIC -- SET    A.FIRST_ORDER = TEMP1.FIRST_ORDER_DATE
# MAGIC -- FROM  (SELECT S.CUST_ACCT_ID, MIN(INVC_OR_CRMEMO_DT) AS FIRST_ORDER_DATE
# MAGIC --         FROM PRD_PSAS_DB.RPT.T_NET_CUST_SALES S
# MAGIC --         INNER JOIN psas_di_dev.`340b_gold`.t_phs_audit_part1 A ON S.CUST_ACCT_ID = A.CUST_ACCT_ID
# MAGIC --         WHERE INVC_OR_CRMEMO_DT BETWEEN DATE_TRUNC('MONTH', ADD_MONTHS(CURRENT_TIMESTAMP(),-72)) AND LAST_DAY(ADD_MONTHS(CURRENT_TIMESTAMP(),0))
# MAGIC --         AND A.ACCT_CLASSIFICATION IN ('005','004','003')
# MAGIC --         GROUP BY S.CUST_ACCT_ID
# MAGIC --       ) TEMP1
# MAGIC
# MAGIC -- WHERE A.CUST_ACCT_ID = TEMP1.CUST_ACCT_ID
# MAGIC --  AND (A.FIRST_ORDER IS NULL OR A.FIRST_ORDER <> TEMP1.FIRST_ORDER_DATE)
# MAGIC --   AND A.ACTIVATION_DATE < TEMP1.FIRST_ORDER_DATE;
# MAGIC
# MAGIC MERGE INTO psas_di_dev.`340b_gold`.t_phs_audit_part1 AS A
# MAGIC USING (
# MAGIC     SELECT S.CUST_ACCT_ID, MIN(INVC_OR_CRMEMO_DT) AS FIRST_ORDER_DATE
# MAGIC     FROM DEV_PSAS_DB.RPT.T_NET_CUST_SALES S
# MAGIC     INNER JOIN psas_di_dev.`340b_gold`.t_phs_audit_part1 A ON S.CUST_ACCT_ID = A.CUST_ACCT_ID
# MAGIC     WHERE INVC_OR_CRMEMO_DT BETWEEN DATE_TRUNC('MONTH', ADD_MONTHS(CURRENT_TIMESTAMP(), -72)) AND LAST_DAY(ADD_MONTHS(CURRENT_TIMESTAMP(), 0))
# MAGIC     AND A.ACCT_CLASSIFICATION IN ('005', '004', '003')
# MAGIC     GROUP BY S.CUST_ACCT_ID
# MAGIC ) AS TEMP1
# MAGIC ON A.CUST_ACCT_ID = TEMP1.CUST_ACCT_ID
# MAGIC WHEN MATCHED AND (A.FIRST_ORDER IS NULL OR A.FIRST_ORDER <> TEMP1.FIRST_ORDER_DATE) AND A.ACTIVATION_DATE < TEMP1.FIRST_ORDER_DATE THEN
# MAGIC UPDATE SET A.FIRST_ORDER = TEMP1.FIRST_ORDER_DATE;
# MAGIC
# MAGIC -- UPDATE psas_di_dev.`340b_gold`.t_phs_audit_part1 A
# MAGIC -- SET    A.LAST_ORDER = TEMP1.LAST_ORDER_DATE
# MAGIC -- FROM (SELECT S.CUST_ACCT_ID, MAX(PROC_WRK_DT) AS LAST_ORDER_DATE
# MAGIC --        FROM PRD_PSAS_DB.RPT.T_NET_CUST_SALES S
# MAGIC --        INNER JOIN psas_di_dev.`340b_gold`.t_phs_audit_part1 A ON S.CUST_ACCT_ID = A.CUST_ACCT_ID
# MAGIC --        WHERE PROC_WRK_DT BETWEEN DATE_TRUNC('MONTH', ADD_MONTHS(CURRENT_TIMESTAMP(),-150)) AND LAST_DAY(ADD_MONTHS(CURRENT_TIMESTAMP(),0))
# MAGIC --        AND A.ACCT_CLASSIFICATION IN ('005','004','003') AND A.CUST_CHN_ID <> '989' AND A.ACTIVE_CUST_IND = 'A'
# MAGIC --        GROUP BY S.CUST_ACCT_ID
# MAGIC --        HAVING CAST(SUM(SLS_CR_AMT) AS FLOAT) > 1
# MAGIC --      ) TEMP1
# MAGIC      
# MAGIC -- WHERE A.CUST_ACCT_ID = TEMP1.CUST_ACCT_ID
# MAGIC --  AND (A.LAST_ORDER IS NULL OR (A.LAST_ORDER <> TEMP1.LAST_ORDER_DATE AND A.LAST_ORDER < TEMP1.LAST_ORDER_DATE));
# MAGIC
# MAGIC MERGE INTO psas_di_dev.`340b_gold`.t_phs_audit_part1 A
# MAGIC USING (
# MAGIC     SELECT S.CUST_ACCT_ID, MAX(PROC_WRK_DT) AS LAST_ORDER_DATE
# MAGIC     FROM DEV_PSAS_DB.RPT.T_NET_CUST_SALES S
# MAGIC     INNER JOIN psas_di_dev.`340b_gold`.t_phs_audit_part1 A ON S.CUST_ACCT_ID = A.CUST_ACCT_ID
# MAGIC     WHERE PROC_WRK_DT BETWEEN DATE_TRUNC('MONTH', ADD_MONTHS(CURRENT_TIMESTAMP(), -150)) 
# MAGIC         AND LAST_DAY(ADD_MONTHS(CURRENT_TIMESTAMP(), 0))
# MAGIC         AND A.ACCT_CLASSIFICATION IN ('005', '004', '003') 
# MAGIC         AND A.CUST_CHN_ID <> '989' 
# MAGIC         AND A.ACTIVE_CUST_IND = 'A'
# MAGIC     GROUP BY S.CUST_ACCT_ID
# MAGIC     HAVING CAST(SUM(SLS_CR_AMT) AS FLOAT) > 1
# MAGIC ) TEMP1
# MAGIC ON A.CUST_ACCT_ID = TEMP1.CUST_ACCT_ID
# MAGIC WHEN MATCHED AND (A.LAST_ORDER IS NULL OR (A.LAST_ORDER <> TEMP1.LAST_ORDER_DATE AND A.LAST_ORDER < TEMP1.LAST_ORDER_DATE))
# MAGIC THEN UPDATE SET A.LAST_ORDER = TEMP1.LAST_ORDER_DATE;
# MAGIC
# MAGIC
# MAGIC

# COMMAND ----------

# MAGIC %sql
# MAGIC DELETE FROM  psas_di_dev.340b_gold.T_PHS_AUDIT_2;
# MAGIC
# MAGIC --------04 AQ_PHS_AUDIT
# MAGIC INSERT INTO  psas_di_dev.340b_gold.T_PHS_AUDIT_2 ( CUST_ACCT_ID, CUST_ACCT_NAME, ACCT_CLASSIFICATION, CUST_CHN_ID, CHAIN_NAM, NATIONAL_GRP_CD, NATIONAL_GRP_NAME, NATIONAL_SUBGRP_CD, NATIONAL_SUBGRP_NAME, REGION_CD, REGION_NAME, DELIVERY_DOC, DIST_CHANNEL, HOME_DC_ID, DC_NAME, PHS_340B_ID, PHS_340B_ID_NOSUFFIX, DEA_FAMILY, STATUS,UPDATE_SAP, MNC, COVERED_ENTITY_PRIMARY, CONTRACT_PHARMACY_NAME, CONTRACT_PHARMACY_PRIMARY, DSCSA_RECEIVED, ACTIVATION_DATE, ACCT_NAME_PHS, ENTITY_TYPE, AUDIT_GPO, AGREEMENT, AGREEMENT_EXPIRATION, CAN_NAM, AUDIT_GROUP_NAME, AUDIT_COMMENTS, AUDIT_STATUS, Returns_Matrix, SALES_ADMIN, MHS_SALES_REP, RX_COGS, OTC_COGS, COMMENTS, SALES_REP, SALES_LSTMTH, SALES_CURMTH, ADDR_DELIVERY, ADDR_INVOICE, DEA_NUM, BUS_TYP_CD, RX_BILL_PLAN, ROUTE, STOP, GPO_ID, GPO_ACCT, THIRD_PARTY_VENDOR, ZX_BLOCK, OPENED_FOR_RETURNS, UPDATE_ACTIVESTATUS, UPDATE_340BID, FIRST_ORDER, LAST_ORDER )
# MAGIC SELECT ADMIN_T_PHS_AUDIT.CUST_ACCT_ID, 
# MAGIC        ADMIN_T_PHS_AUDIT.CUST_ACCT_NAME, 
# MAGIC        ADMIN_T_PHS_AUDIT.ACCT_CLASSIFICATION, 
# MAGIC        ADMIN_T_PHS_AUDIT.CUST_CHN_ID, 
# MAGIC        ADMIN_T_PHS_AUDIT.CHAIN_NAM, 
# MAGIC        ADMIN_T_PHS_AUDIT.NATIONAL_GRP_CD, 
# MAGIC        ADMIN_T_PHS_AUDIT.NATIONAL_GRP_NAME, 
# MAGIC        ADMIN_T_PHS_AUDIT.NATIONAL_SUBGRP_CD, 
# MAGIC        ADMIN_T_PHS_AUDIT.NATIONAL_SUBGRP_NAME, 
# MAGIC        ADMIN_T_PHS_AUDIT.REGION_CD, 
# MAGIC        ADMIN_T_PHS_AUDIT.REGION_NAME, 
# MAGIC        ADMIN_T_PHS_AUDIT.DELIVERY_DOC, 
# MAGIC        ADMIN_T_PHS_AUDIT.DIST_CHANNEL, 
# MAGIC        ADMIN_T_PHS_AUDIT.HOME_DC_ID, 
# MAGIC        LUTL_SALES_ADMIN.Location AS DC_NAME, 
# MAGIC        ADMIN_T_PHS_AUDIT.PHS_340B_ID, 
# MAGIC        ADMIN_T_PHS_AUDIT.PHS_340B_ID, 
# MAGIC        ADMIN_T_PHS_AUDIT.DEA_FAMILY, 
# MAGIC        IFF(ACTIVE_CUST_IND = 'A','ACTIVE','INACTIVE') AS STATUS, 
# MAGIC        ADMIN_T_PHS_AUDIT.UPDATE_SAP, 
# MAGIC        '' AS MNC, 
# MAGIC        T_Pharmacy_Type_Data.CE_Primary AS COVERED_ENTITY_PRIMARY,
# MAGIC        T_Pharmacy_Type_Data.Pharmacy_Name AS CONTRACT_PHARMACY_NAME,
# MAGIC        T_Pharmacy_Type_Data.CP_Primary AS CONTRACT_PHARMACY_PRIMARY, 
# MAGIC        T_Pharmacy_Type_Data.DSCSA_RECEIVED, ADMIN_T_PHS_AUDIT.ACTIVATION_DATE, 
# MAGIC        'N' AS ACCT_NAME_PHS, 
# MAGIC        ADMIN_T_PHS_AUDIT.ENTITY_TYPE,
# MAGIC        T_Quarterly_Audit_Data.GPO AS AUDIT_GPO,
# MAGIC        T_Quarterly_Audit_Data.Agreement, 
# MAGIC        T_Quarterly_Audit_Data.Agreement_Expiration, 
# MAGIC        (CASE WHEN T_Quarterly_Audit_Data.CAN_NAME <> '-' THEN T_Quarterly_Audit_Data.CAN_NAME ELSE '' END) AS CAN_NAM, 
# MAGIC        T_Quarterly_Audit_Data.GROUP_NAME AS AUDIT_GROUP_NAME, 
# MAGIC        T_Quarterly_Audit_Data.COMMENTS AS AUDIT_COMMENTS, 
# MAGIC        T_Quarterly_Audit_Data.AUDIT_STATUS, 
# MAGIC        T_Quarterly_Audit_Data.Returns_Matrix,
# MAGIC        LUTL_SALES_ADMIN.Sales_Admin, 
# MAGIC        LUTL_SALES_ADMIN.MHS_Sales AS MHS_SALES_REP, 
# MAGIC        ADMIN_T_PHS_AUDIT.COGS_RX AS RX_COGS, 
# MAGIC        ADMIN_T_PHS_AUDIT.COGS_OTC AS OTC_COGS, 
# MAGIC        T_COMMENTS.COMMENTS, 
# MAGIC        ADMIN_T_PHS_AUDIT.SALES_REP, 
# MAGIC        ADMIN_T_PHS_AUDIT.SALES_LSTMTH, 
# MAGIC        ADMIN_T_PHS_AUDIT.SALES_CURMTH, 
# MAGIC        ADMIN_T_PHS_AUDIT.ADDR_DELIVERY,
# MAGIC        ADMIN_T_PHS_AUDIT.ADDR_INVOICE, 
# MAGIC        ADMIN_T_PHS_AUDIT.DEA_NUM,
# MAGIC        ADMIN_T_PHS_AUDIT.BUS_TYP_CD, 
# MAGIC        ADMIN_T_PHS_AUDIT.RX_BILL_PLAN, 
# MAGIC        ADMIN_T_PHS_AUDIT.DLVRY_RTE_NUM,
# MAGIC        ADMIN_T_PHS_AUDIT.DLVRY_RTE_STOP_NUM, 
# MAGIC        ADMIN_T_PHS_AUDIT.GPO_ID, 
# MAGIC        ADMIN_T_PHS_AUDIT.GPO_ACCT,
# MAGIC        '' AS THIRD_PARTY_VENDOR, 
# MAGIC        T_COMMENTS.ZX_BLOCK, T_COMMENTS.OPENED_FOR_RETURNS,
# MAGIC        ADMIN_T_PHS_AUDIT.UPDATE_ACTIVESTATUS, 
# MAGIC        ADMIN_T_PHS_AUDIT.UPDATE_340BID, 
# MAGIC        ADMIN_T_PHS_AUDIT.FIRST_ORDER, 
# MAGIC        ADMIN_T_PHS_AUDIT.LAST_ORDER
# MAGIC   FROM psas_di_dev.`340b_gold`.t_phs_audit_part1 AS ADMIN_T_PHS_AUDIT 
# MAGIC        LEFT JOIN  psas_di_dev.340b_slvr.T_LUTL_SALES_ADMIN AS LUTL_SALES_ADMIN ON ADMIN_T_PHS_AUDIT.HOME_DC_ID = LUTL_SALES_ADMIN.DC 
# MAGIC        LEFT JOIN psas_di_dev.340b_slvr.T_COMMENTS AS T_COMMENTS ON ADMIN_T_PHS_AUDIT.CUST_ACCT_ID = T_COMMENTS.Account
# MAGIC        LEFT JOIN  psas_di_dev.`340b_brnz`.T_QUARTERLY_AUDIT_DATA AS T_Quarterly_Audit_Data ON ADMIN_T_PHS_AUDIT.CUST_ACCT_ID = T_Quarterly_Audit_Data.Cust_Acct_ID 
# MAGIC        LEFT JOIN  psas_di_dev.340b_slvr.T_PHARMACY_TYPE_DATA AS T_PHARMACY_TYPE_DATA ON ADMIN_T_PHS_AUDIT.CUST_ACCT_ID = T_Pharmacy_Type_Data.Cust_Acct
# MAGIC  WHERE (((ADMIN_T_PHS_AUDIT.CUST_ACCT_ID) Is Not Null));

# COMMAND ----------

# MAGIC %sql
# MAGIC DELETE --T_PHS_AUDIT.CUST_ACCT_NAME, REGEXP_INSTR(CUST_ACCT_NAME," TEMPLATE") AS Expr1
# MAGIC FROM psas_di_dev.340b_gold.T_PHS_AUDIT_2
# MAGIC WHERE (CHARINDEX(' TEMPLATE',CUST_ACCT_NAME)>0);

# COMMAND ----------

# MAGIC %sql
# MAGIC UPDATE psas_di_dev.340b_gold.T_PHS_AUDIT_2 AS T_PHS_AUDIT
# MAGIC    SET T_PHS_AUDIT.ENTITY_TYPE = Left(PHS_340B_ID,2)
# MAGIC  WHERE Left(PHS_340B_ID,3) IN ('CH0','CH1')
# MAGIC     OR Left(PHS_340B_ID,2) IN ('FP','HM','HV','NH','TB','UI','RW');

# COMMAND ----------

# MAGIC %sql
# MAGIC MERGE INTO psas_di_dev.340b_gold.T_PHS_AUDIT_2 AS T_PHS_AUDIT
# MAGIC USING psas_di_dev.340b_slvr.T_LUTL_ENTITY AS LUTL_ENTITY
# MAGIC ON T_PHS_AUDIT.ENTITY_TYPE = LUTL_ENTITY.ENTITY_TYPE
# MAGIC WHEN MATCHED THEN
# MAGIC   UPDATE SET T_PHS_AUDIT.ENTITY_TYPE_NAME = LUTL_ENTITY.ENTITY_NAME;

# COMMAND ----------

# MAGIC %sql
# MAGIC UPDATE psas_di_dev.340b_gold.T_PHS_AUDIT_2 AS T_PHS_AUDIT
# MAGIC SET T_PHS_AUDIT.ACCT_NAME_PHS = 'Y'
# MAGIC WHERE (CHARINDEX(' PHS',CUST_ACCT_NAME)>0) OR
# MAGIC       ((CHARINDEX('PHS',CUST_ACCT_NAME)>0) AND (Left(CUST_ACCT_NAME,5)<>'USPHS') AND (CHARINDEX('JOSEPHS',CUST_ACCT_NAME)=0));

# COMMAND ----------

# MAGIC %sql
# MAGIC UPDATE psas_di_dev.340b_gold.T_PHS_AUDIT_2 AS T_PHS_AUDIT 
# MAGIC    SET T_PHS_AUDIT.PHS_340B_ID_NOSUFFIX = Left(PHS_340B_ID_NOSUFFIX,CHARINDEX('-',PHS_340B_ID_NOSUFFIX)-1)
# MAGIC WHERE (( T_PHS_AUDIT.PHS_340B_ID_NOSUFFIX Is Not Null And T_PHS_AUDIT.PHS_340B_ID_NOSUFFIX <> '') AND ((CHARINDEX('-',PHS_340B_ID_NOSUFFIX))>0));

# COMMAND ----------

# MAGIC %sql
# MAGIC UPDATE psas_di_dev.340b_gold.T_PHS_AUDIT_2 AS T_PHS_AUDIT
# MAGIC    SET T_PHS_AUDIT.PHS_340B_ID_NOSUFFIX = Left(PHS_340B_ID_NOSUFFIX,Len(PHS_340B_ID_NOSUFFIX)-1)
# MAGIC  WHERE (((T_PHS_AUDIT.PHS_340B_ID_NOSUFFIX) Is Not Null And (T_PHS_AUDIT.PHS_340B_ID_NOSUFFIX)<>'') AND ((REGEXP_LIKE(Right(PHS_340B_ID_NOSUFFIX,1),'[0-9]') )=false));

# COMMAND ----------

# MAGIC %sql
# MAGIC ------12 AQ_Update_PVP_Coding_Table -- Need to check with Praveen 
# MAGIC INSERT INTO psas_di_dev.340b_slvr.T_LUTL_PVP_CODING ( CODING, PVP_CODING, NATL_GRP, CHAIN, CHAIN_NAME, SUB_GROUP, SUB_GROUP_NAME )
# MAGIC SELECT SubGroups.Chain_SG, 
# MAGIC        'Y' AS PVP_Coding, 
# MAGIC        SubGroups.NATIONAL_GRP_CD AS Natl_Grp,
# MAGIC        SubGroups.Chain, SubGroups.CHAIN_NAM AS Chain_Name,
# MAGIC        SubGroups.Sub_Group AS Sub_Group,
# MAGIC        SubGroups.NATIONAL_SUBGRP_NAME AS Sub_Group_Name
# MAGIC FROM (SELECT DISTINCT 
# MAGIC        Chains.Chain || (CASE WHEN TRIM(NATIONAL_SUBGRP_CD)<> '' THEN NATIONAL_SUBGRP_CD ELSE '000000' END) AS Chain_SG, 
# MAGIC        T_PHS_AUDIT.NATIONAL_GRP_CD, 
# MAGIC        Chains.Chain, 
# MAGIC        T_PHS_AUDIT.CHAIN_NAM, 
# MAGIC        (CASE WHEN Trim(NATIONAL_SUBGRP_CD)<> '' THEN NATIONAL_SUBGRP_CD ELSE '000000' END) AS Sub_Group, 
# MAGIC        T_PHS_AUDIT.NATIONAL_SUBGRP_NAME, 
# MAGIC        T_PHS_AUDIT.STATUS
# MAGIC  FROM psas_di_dev.340b_slvr.T_CHAINS AS Chains INNER JOIN psas_di_dev.340b_gold.T_PHS_AUDIT_2 AS T_PHS_AUDIT ON Chains.Chain = T_PHS_AUDIT.CUST_CHN_ID
# MAGIC WHERE UPPER(T_PHS_AUDIT.STATUS)='ACTIVE') AS SubGroups LEFT JOIN psas_di_dev.340b_slvr.T_LUTL_PVP_CODING AS LUPVCOD ON SubGroups.Chain_SG = LUPVCOD.Coding
# MAGIC WHERE LUPVCOD.ID Is Null;

# COMMAND ----------

# MAGIC %sql
# MAGIC UPDATE psas_di_dev.340b_gold.T_PHS_AUDIT_2 AS T_PHS_AUDIT
# MAGIC    SET T_PHS_AUDIT.PVP_CODE = CUST_CHN_ID || (case when Trim(NATIONAL_SUBGRP_CD)<>'' then NATIONAL_SUBGRP_CD else '000000' end)
# MAGIC  WHERE (T_PHS_AUDIT.ACCT_CLASSIFICATION='003' Or T_PHS_AUDIT.ACCT_CLASSIFICATION in ('004','005')) 
# MAGIC  OR (T_PHS_AUDIT.NATIONAL_GRP_CD='0240' AND UPPER(T_PHS_AUDIT.STATUS)='ACTIVE');

# COMMAND ----------

# MAGIC %sql
# MAGIC -- UPDATE psas_di_dev.340b_gold.T_PHS_AUDIT_2 AS T_PHS_AUDIT
# MAGIC --    SET T_PHS_AUDIT.PVP_CODING = T1.PVP_CODING
# MAGIC --  FROM (SELECT DISTINCT T_PHS_AUDIT.PVP_CODE, (CASE WHEN LUTL_PVP_CODING.PVP_CODING = 'Y' THEN 'Y' ELSE 'N' END)  AS PVP_CODING 
# MAGIC --          FROM psas_di_dev.340b_gold.T_PHS_AUDIT_2 AS T_PHS_AUDIT LEFT JOIN psas_di_dev.340b_slvr.T_LUTL_PVP_CODING AS LUTL_PVP_CODING ON T_PHS_AUDIT.PVP_CODE = LUTL_PVP_CODING.Coding 
# MAGIC --         WHERE ((T_PHS_AUDIT.ACCT_CLASSIFICATION='003' Or T_PHS_AUDIT.ACCT_CLASSIFICATION in ('004','005')) OR (T_PHS_AUDIT.NATIONAL_GRP_CD='0240')) )T1
# MAGIC --  WHERE T_PHS_AUDIT.PVP_CODE = T1.PVP_CODE;
# MAGIC
# MAGIC MERGE INTO psas_di_dev.340b_gold.T_PHS_AUDIT_2 AS T_PHS_AUDIT
# MAGIC USING (
# MAGIC     SELECT DISTINCT 
# MAGIC         T_PHS_AUDIT.PVP_CODE, 
# MAGIC         CASE 
# MAGIC             WHEN LUTL_PVP_CODING.PVP_CODING = 'Y' THEN 'Y' 
# MAGIC             ELSE 'N' 
# MAGIC         END AS PVP_CODING 
# MAGIC     FROM psas_di_dev.340b_gold.T_PHS_AUDIT_2 AS T_PHS_AUDIT 
# MAGIC     LEFT JOIN psas_di_dev.340b_slvr.T_LUTL_PVP_CODING AS LUTL_PVP_CODING 
# MAGIC     ON T_PHS_AUDIT.PVP_CODE = LUTL_PVP_CODING.Coding 
# MAGIC     WHERE (
# MAGIC         T_PHS_AUDIT.ACCT_CLASSIFICATION = '003' 
# MAGIC         OR T_PHS_AUDIT.ACCT_CLASSIFICATION IN ('004', '005') 
# MAGIC         OR T_PHS_AUDIT.NATIONAL_GRP_CD = '0240'
# MAGIC     )
# MAGIC ) AS T1
# MAGIC ON T_PHS_AUDIT.PVP_CODE = T1.PVP_CODE
# MAGIC WHEN MATCHED THEN 
# MAGIC     UPDATE SET T_PHS_AUDIT.PVP_CODING = T1.PVP_CODING;

# COMMAND ----------

# MAGIC %sql
# MAGIC UPDATE psas_di_dev.340b_gold.T_PHS_AUDIT_2 AS T_PHS_AUDIT
# MAGIC    SET T_PHS_AUDIT.PVP_CODING = 'N'
# MAGIC  WHERE T_PHS_AUDIT.CUST_CHN_ID='784' AND T_PHS_AUDIT.REGION_CD='000002';

# COMMAND ----------

# MAGIC %sql
# MAGIC -- UPDATE psas_di_dev.340b_gold.T_PHS_AUDIT_2  AS T_PHS_AUDIT
# MAGIC --    SET T_PHS_AUDIT.MNC = 'A34'
# MAGIC --   FROM psas_di_dev.340b_slvr.T_MNC_PHS AS MNC_PHS
# MAGIC --  WHERE MNC_PHS.CUSTOMER = T_PHS_AUDIT.CUST_ACCT_ID 
# MAGIC --    AND MNC_PHS.MEM='A34';
# MAGIC
# MAGIC UPDATE psas_di_dev.340b_gold.T_PHS_AUDIT_2
# MAGIC SET MNC = 'A34'
# MAGIC WHERE CUST_ACCT_ID IN (
# MAGIC     SELECT CUSTOMER
# MAGIC     FROM psas_di_dev.340b_slvr.T_MNC_PHS
# MAGIC     WHERE MEM = 'A34'
# MAGIC );

# COMMAND ----------

# MAGIC %sql
# MAGIC UPDATE psas_di_dev.340b_gold.T_PHS_AUDIT_2
# MAGIC SET MNC = MNC || 'C34'
# MAGIC WHERE CUST_ACCT_ID IN (
# MAGIC     SELECT Customer
# MAGIC     FROM psas_di_dev.340b_slvr.T_MNC_PHS
# MAGIC     WHERE Mem = 'C34'
# MAGIC );

# COMMAND ----------

# MAGIC %sql
# MAGIC MERGE INTO psas_di_dev.340b_gold.T_PHS_AUDIT_2 AS T_PHS_AUDIT
# MAGIC USING psas_di_dev.340b_slvr.T_Nat_Grp AS Nat_Grp
# MAGIC ON T_PHS_AUDIT.CUST_ACCT_ID = Nat_Grp.CUSID
# MAGIC WHEN MATCHED THEN
# MAGIC   UPDATE SET T_PHS_AUDIT.ACM_NAME = Nat_Grp.ACM;

# COMMAND ----------

# MAGIC %sql
# MAGIC INSERT INTO psas_di_dev.340b_slvr.T_ACTIVESTATUSUPDATE ( CUST_ACCT_ID, CUST_ACCT_NAME, ACCT_CLASS, STATUS, ACTIVE_STATUS_UPDATE )
# MAGIC SELECT DISTINCT 
# MAGIC        V_UPDATEACTIVESTATUS_21.CUST_ACCT_ID, 
# MAGIC        V_UPDATEACTIVESTATUS_21.CUST_ACCT_NAME, 
# MAGIC        V_UPDATEACTIVESTATUS_21.ACCT_CLASSIFICATION,
# MAGIC        V_UPDATEACTIVESTATUS_21.STATUS,
# MAGIC        V_UPDATEACTIVESTATUS_21.UPDATE_ACTIVESTATUS
# MAGIC FROM (SELECT T_PHS_AUDIT.CUST_ACCT_ID, T_PHS_AUDIT.CUST_ACCT_NAME, T_PHS_AUDIT.ACCT_CLASSIFICATION, T_PHS_AUDIT.STATUS, T_PHS_AUDIT.UPDATE_ACTIVESTATUS
# MAGIC FROM psas_di_dev.340b_gold.T_PHS_AUDIT_2  AS T_PHS_AUDIT
# MAGIC WHERE (((T_PHS_AUDIT.UPDATE_ACTIVESTATUS) Is Not Null))) V_UPDATEACTIVESTATUS_21 LEFT JOIN psas_di_dev.340b_slvr.T_ACTIVESTATUSUPDATE AS T_ACTIVESTATUSUPDATE ON V_UPDATEACTIVESTATUS_21.CUST_ACCT_ID = T_ACTIVESTATUSUPDATE.CUST_ACCT_ID 
# MAGIC      AND (V_UPDATEACTIVESTATUS_21.UPDATE_ACTIVESTATUS = T_ACTIVESTATUSUPDATE.ACTIVE_STATUS_UPDATE)
# MAGIC WHERE (T_ACTIVESTATUSUPDATE.CUST_ACCT_ID IS Null AND T_ACTIVESTATUSUPDATE.ACTIVE_STATUS_UPDATE IS Null);

# COMMAND ----------

# MAGIC %sql
# MAGIC ------00 MCR_HRSA_UPDATE_DATA
# MAGIC ------Note: Currently, 01 DQ_HRSA is repeated at the end of this sequence to conserve space on MS-Access application.
# MAGIC ---1. OpenQuery: 01 DQ_HRSA
# MAGIC ---2. OpenQuery: 02 AQ_HRSA
# MAGIC ---3. OpenQuery: 03 UQ_HRSA_SelectRecordsForDelete
# MAGIC ---4. OpenQuery: 04 DQ_HRSA_DeleteSelectedRecords
# MAGIC ---5. OpenQuery: 05 UQ_HRSA_ClearFields
# MAGIC ---6. OpenQuery: 06 UQ_CoveredEntityName
# MAGIC ---7. OpenQuery: 01 DQ_HRSA
# MAGIC --DESC TABLE T_HRSA;
# MAGIC ----01 DQ_HRSA
# MAGIC DELETE FROM psas_di_dev.340b_slvr.T_HRSA;
# MAGIC
# MAGIC ---02 AQ_HRSA
# MAGIC --OPACE_DAILY_PUBLIC ---Rename as T_OPACE_DAILY_PUBLIC
# MAGIC INSERT INTO psas_di_dev.340b_slvr.T_HRSA ( PHS_340B_ID, HRSA_START_DATE, HRSA_TERM_DATE, COVERED_ENTITY, Address, City, State, Zip )
# MAGIC SELECT DISTINCT 
# MAGIC          ODP.340B_ID AS PHS_340B_ID,
# MAGIC          TO_TIMESTAMP_NTZ(ODP.PARTICIPATING_START_DATE) AS HRSA_START_DATE,
# MAGIC          TO_TIMESTAMP_NTZ(IFF(ODP.TERM_DATE='',NULL,ODP.TERM_DATE)) AS HRSA_TERM_DATE,
# MAGIC          ODP.ENTITY_NAME AS COVERED_ENTITY,
# MAGIC          ODP.ADDRESS_1 AS ADDRESS,
# MAGIC          ODP.CITY, 
# MAGIC          ODP.STATE,
# MAGIC          ODP.ZIP
# MAGIC   FROM psas_di_dev.`340b_brnz`.t_opace_daily_public AS ODP;
# MAGIC
# MAGIC   ---03 UQ_HRSA_SelectRecordsForDelete
# MAGIC UPDATE psas_di_dev.340b_slvr.T_HRSA AS T_HRSA 
# MAGIC SET T_HRSA.DELETE = 1
# MAGIC WHERE NOT EXISTS (SELECT 1 FROM psas_di_dev.340b_gold.T_PHS_AUDIT_2 AS T_PHS_AUDIT WHERE T_HRSA.PHS_340B_ID = T_PHS_AUDIT.PHS_340B_ID);
# MAGIC
# MAGIC ---04 DQ_HRSA_DeleteSelectedRecords
# MAGIC DELETE FROM psas_di_dev.340b_slvr.T_HRSA AS T_HRSA WHERE T_HRSA.DELETE = 1;
# MAGIC
# MAGIC ---05 UQ_HRSA_ClearFields
# MAGIC UPDATE psas_di_dev.340b_gold.T_PHS_AUDIT_2 AS T_PHS_AUDIT
# MAGIC    SET T_PHS_AUDIT.HRSA_START_DATE = NULL, T_PHS_AUDIT.HRSA_TERM_DATE = NULL
# MAGIC WHERE (((T_PHS_AUDIT.HRSA_START_DATE) Is Not Null)) OR (((T_PHS_AUDIT.HRSA_TERM_DATE) Is Not Null));
# MAGIC
# MAGIC ---06 UQ_CoveredEntityName
# MAGIC MERGE INTO psas_di_dev.340b_gold.T_PHS_AUDIT_2 AS T_PHS_AUDIT
# MAGIC USING psas_di_dev.340b_slvr.T_HRSA AS T_HRSA
# MAGIC ON T_PHS_AUDIT.PHS_340B_ID = T_HRSA.PHS_340B_ID
# MAGIC WHEN MATCHED THEN
# MAGIC   UPDATE SET
# MAGIC     T_PHS_AUDIT.HRSA_START_DATE = T_HRSA.HRSA_START_DATE,
# MAGIC     T_PHS_AUDIT.HRSA_TERM_DATE = T_HRSA.HRSA_TERM_DATE,
# MAGIC     T_PHS_AUDIT.COVERED_ENTITY_NAME = T_HRSA.COVERED_ENTITY;
# MAGIC     
# MAGIC

# COMMAND ----------

# MAGIC %sql
# MAGIC
# MAGIC
# MAGIC DELETE FROM psas_di_dev.340b_slvr.T_MT_PVP_REPORT;
# MAGIC
# MAGIC INSERT INTO psas_di_dev.340b_slvr.T_MT_PVP_REPORT (
# MAGIC     PVP_340B_ID, 
# MAGIC     PVP_MEMBER_NAME, 
# MAGIC     PVP_PARTICIPANT_ID, 
# MAGIC     PVP_PARTICIPATION_FLAG, 
# MAGIC     PVP_EFFECTIVE_DATE, 
# MAGIC     PVP_EXPIRATION_DATE, 
# MAGIC     PVP_CITY, 
# MAGIC     PVP_STATE
# MAGIC )
# MAGIC SELECT DISTINCT 
# MAGIC     V_PVP_REPORT_00.PVP_340B_ID,
# MAGIC     V_PVP_REPORT_00.PVP_MEMBER_NAME, 
# MAGIC     V_PVP_REPORT_00.PVP_PARTICIPANT_ID, 
# MAGIC     IFF(
# MAGIC         (UPPER(V_PVP_REPORT_00.PVP_PARTICIPATION_FLAG) = 'TRUE' OR V_PVP_REPORT_00.PVP_PARTICIPATION_FLAG = 'Y'),
# MAGIC         'Y',
# MAGIC         'N'
# MAGIC     ) AS PVP_PARTICIPATION_FLAG,
# MAGIC     DATE_FROM_UNIX_DATE(V_PVP_REPORT_00.PVP_EFFECTIVE_DATE) AS PVP_EFFECTIVE_DATE,
# MAGIC     DATE_FROM_UNIX_DATE(V_PVP_REPORT_00.PVP_EXPIRATION_DATE) AS PVP_EXPIRATION_DATE,
# MAGIC     V_PVP_REPORT_00.PVP_CITY, 
# MAGIC     V_PVP_REPORT_00.PVP_STATE
# MAGIC FROM (
# MAGIC     SELECT DISTINCT 
# MAGIC         TRIM(PVRPT.PVP_340B_ID) AS PVP_340B_ID, 
# MAGIC         PVRPT.PVP_MEMBER_NAME, 
# MAGIC         PVRPT.PVP_PARTICIPANT_ID,
# MAGIC         PVRPT.PVP_PARTICIPATION_FLAG,
# MAGIC         PVRPT.PVP_EFFECTIVE_DATE, 
# MAGIC         PVRPT.PVP_EXPIRATION_DATE, 
# MAGIC         TO_DATE(
# MAGIC             IFF(
# MAGIC                 LEN(PVRPT.HRSA_MEMBER_DATE) >= 8 AND LEN(PVRPT.HRSA_MEMBER_DATE) <= 10, 
# MAGIC                 PVRPT.HRSA_MEMBER_DATE,
# MAGIC                 SUBSTRING(PVRPT.HRSA_MEMBER_DATE, 1, CHARINDEX(' ', PVRPT.HRSA_MEMBER_DATE) - 1)
# MAGIC             )
# MAGIC         ) AS HRSA_MEMBER_DATE,
# MAGIC         PVRPT.PVP_CITY, 
# MAGIC         PVRPT.PVP_STATE
# MAGIC     FROM psas_di_dev.340b_slvr.T_PVP_REPORT AS PVRPT
# MAGIC ) V_PVP_REPORT_00
# MAGIC INNER JOIN psas_di_dev.340b_gold.T_PHS_AUDIT_2 AS T_PHS_AUDIT 
# MAGIC ON V_PVP_REPORT_00.PVP_340B_ID = T_PHS_AUDIT.PHS_340B_ID;
# MAGIC

# COMMAND ----------

# MAGIC %sql
# MAGIC UPDATE psas_di_dev.340b_gold.T_PHS_AUDIT_2 AS T_PHS_AUDIT 
# MAGIC    SET T_PHS_AUDIT.PVP_MEMBER_NAME = '', 
# MAGIC        T_PHS_AUDIT.PVP_PARTICIPANT_ID = '', 
# MAGIC        T_PHS_AUDIT.PVP_PARTICIPATION_FLAG = 'N', 
# MAGIC        T_PHS_AUDIT.PVP_ELIGIBILITY_DATE = NULL, 
# MAGIC        T_PHS_AUDIT.PVP_EXPIRATION_DATE = NULL, 
# MAGIC        T_PHS_AUDIT.CE_CITY = '', 
# MAGIC        T_PHS_AUDIT.CE_STATE = '' 
# MAGIC  WHERE (((T_PHS_AUDIT.ACCT_CLASSIFICATION)='003' Or (T_PHS_AUDIT.ACCT_CLASSIFICATION) in ('004','005')));

# COMMAND ----------

# MAGIC %sql
# MAGIC MERGE INTO psas_di_dev.340b_gold.T_PHS_AUDIT_2 AS T_PHS_AUDIT
# MAGIC USING psas_di_dev.340b_slvr.T_MT_PVP_REPORT AS MT_PVP_REPORT
# MAGIC ON T_PHS_AUDIT.PHS_340B_ID = MT_PVP_REPORT.PVP_340B_ID
# MAGIC WHEN MATCHED THEN
# MAGIC   UPDATE SET 
# MAGIC     T_PHS_AUDIT.PVP_MEMBER_NAME = MT_PVP_REPORT.PVP_Member_Name, 
# MAGIC     T_PHS_AUDIT.PVP_PARTICIPANT_ID = MT_PVP_REPORT.PVP_Participant_ID, 
# MAGIC     T_PHS_AUDIT.PVP_PARTICIPATION_FLAG = MT_PVP_REPORT.PVP_Participation_Flag, 
# MAGIC     T_PHS_AUDIT.PVP_ELIGIBILITY_DATE = MT_PVP_REPORT.PVP_Effective_Date, 
# MAGIC     T_PHS_AUDIT.PVP_EXPIRATION_DATE = MT_PVP_REPORT.PVP_Expiration_Date, 
# MAGIC     T_PHS_AUDIT.CE_CITY = MT_PVP_REPORT.PVP_City, 
# MAGIC     T_PHS_AUDIT.CE_STATE = MT_PVP_REPORT.PVP_State;

# COMMAND ----------

# MAGIC %sql
# MAGIC DELETE FROM psas_di_dev.340b_slvr.T_MT_PVP_REPORT_PARENTMATCH;
# MAGIC
# MAGIC INSERT INTO psas_di_dev.340b_slvr.T_MT_PVP_REPORT_PARENTMATCH( PVP_340B_ID, PVP_MEMBER_NAME, PVP_PARTICIPANT_ID, PVP_PARTICIPATION_FLAG, PVP_EFFECTIVE_DATE, PVP_EXPIRATION_DATE )
# MAGIC SELECT DISTINCT 
# MAGIC        MT_PVP_REPORT.PVP_340B_ID, 
# MAGIC 	   MT_PVP_REPORT_1.PVP_Member_Name, 
# MAGIC 	   MT_PVP_REPORT_1.PVP_Participant_ID, 
# MAGIC 	   MT_PVP_REPORT_1.PVP_Participation_Flag, 
# MAGIC 	   MT_PVP_REPORT_1.PVP_Effective_Date, 
# MAGIC 	   MT_PVP_REPORT_1.PVP_Expiration_Date
# MAGIC FROM (psas_di_dev.340b_slvr.T_MT_PVP_REPORT AS MT_PVP_REPORT INNER JOIN psas_di_dev.340b_gold.T_PHS_AUDIT_2  AS T_PHS_AUDIT ON MT_PVP_REPORT.PVP_340B_ID = T_PHS_AUDIT.PHS_340B_ID) INNER JOIN psas_di_dev.340b_slvr.T_MT_PVP_REPORT AS MT_PVP_REPORT_1 ON T_PHS_AUDIT.PHS_340B_ID_NOSUFFIX = MT_PVP_REPORT_1.PVP_340B_ID
# MAGIC WHERE (MT_PVP_REPORT_1.PVP_Participation_Flag='Y' AND MT_PVP_REPORT.PVP_Participation_Flag='N')
# MAGIC ORDER BY MT_PVP_REPORT.PVP_340B_ID;

# COMMAND ----------

# MAGIC %sql
# MAGIC MERGE INTO psas_di_dev.340b_gold.T_PHS_AUDIT_2 AS T_PHS_AUDIT
# MAGIC USING psas_di_dev.340b_slvr.T_MT_PVP_REPORT_PARENTMATCH AS MT_PVP_REPORT_PARENTMATCH
# MAGIC ON T_PHS_AUDIT.PHS_340B_ID = MT_PVP_REPORT_PARENTMATCH.PVP_340B_ID
# MAGIC WHEN MATCHED THEN
# MAGIC   UPDATE SET 
# MAGIC     T_PHS_AUDIT.PVP_MEMBER_NAME = MT_PVP_REPORT_PARENTMATCH.PVP_MEMBER_NAME, 
# MAGIC     T_PHS_AUDIT.PVP_PARTICIPANT_ID = MT_PVP_REPORT_PARENTMATCH.PVP_PARTICIPANT_ID, 
# MAGIC     T_PHS_AUDIT.PVP_PARTICIPATION_FLAG = MT_PVP_REPORT_PARENTMATCH.PVP_PARTICIPATION_FLAG, 
# MAGIC     T_PHS_AUDIT.PVP_ELIGIBILITY_DATE = MT_PVP_REPORT_PARENTMATCH.PVP_EFFECTIVE_DATE, 
# MAGIC     T_PHS_AUDIT.PVP_EXPIRATION_DATE = MT_PVP_REPORT_PARENTMATCH.PVP_EXPIRATION_DATE;

# COMMAND ----------

# MAGIC %sql
# MAGIC -- DELETE FROM psas_di_dev.`340b_slvr`.T_DMEM_LIST;
# MAGIC
# MAGIC -- INSERT INTO psas_di_dev.`340b_slvr`.T_DMEM_LIST( CUST_ACCT_ID, CNTRCT_LEAD_ID, LEAD_NAME, LEAD_TYPE, PRTY_CONT, MARKUP_CONT, CONT_PREFD )
# MAGIC -- SELECT VPSD00.CUST_ACCT_ID, VPSD00.CNTRCT_LEAD_ID, VPSD00.LEAD_NAME, VPSD00.LEAD_TYPE, VPSD00.PRTY_CONT, VPSD00.MARKUP_CONT, VPSD00.CONT_PREFD
# MAGIC -- FROM (SELECT CA.CUST_ACCT_ID, CUST_ACCT_NAM, CE.CNTRCT_LEAD_ID, L.LEAD_NAME,
# MAGIC -- L.LEAD_TYPE, CE.PRTY_CONT, CE.MARKUP_CONT, CE.CONT_PREFD
# MAGIC -- FROM dev_PSAS_DB.RPT.T_IW_CUST_ACCT CA INNER JOIN dev_PSAS_DB.RPT.T_DCON_CONT_ELIG CE
# MAGIC -- ON CA.CUST_ACCT_ID  = CE.CUST_ACCT_ID 
# MAGIC -- INNER JOIN DEV_PSAS_DB.RPT.T_CMS_LEAD L
# MAGIC -- ON CE.CNTRCT_LEAD_ID = L.CNTRC_LEAD_ID
# MAGIC -- INNER JOIN DEV_PSAS_DB.RPT.T_DM_VSTX_CUST X ON CA.CUST_ACCT_ID = X.CUST_ACCT_ID
# MAGIC -- WHERE (X.MCK_KU_CHNL_TYP = '20' OR (X.MCK_KU_CHNL_TYP = '50' AND SUBSTRING(CA.CUST_ACCT_NAM, LENGTH(CA.CUST_ACCT_NAM) - 2, 3) = 'PHS')) AND CA.ACTIVE_CUST_IND = 'A' AND CA.CUST_CHN_ID <> '989')  VPSD00;
# MAGIC
# MAGIC
# MAGIC -- DELETE FROM psas_di_dev.`340b_slvr`.T_DMEM_LIST AS A WHERE EXISTS( SELECT 1 FROM psas_di_dev.`340b_gold`.T_PHS_AUDIT_2 AS B WHERE B.CUST_ACCT_ID = A.CUST_ACCT_ID AND (B.ACCT_CLASSIFICATION != '003' AND B.ACCT_CLASSIFICATION not in ('004','005')) );
# MAGIC
# MAGIC -- DELETE FROM psas_di_dev.`340b_slvr`.T_MT_LEAD_LIST;
# MAGIC
# MAGIC -- ---04 AQ_Lead_List
# MAGIC -- INSERT INTO psas_di_dev.`340b_slvr`.T_MT_LEAD_LIST ( CNTRCT_LEAD_ID, CNTRCT_LEAD_NAME, CNTRCT_LEAD_TYPE )
# MAGIC -- SELECT DISTINCT A.CNTRCT_LEAD_ID AS CNTRCT_LEAD_ID, A.LEAD_NAME AS CNTRCT_LEAD_NAME, A.LEAD_TYPE AS CNTRCT_LEAD_TYPE
# MAGIC -- FROM psas_di_dev.`340b_slvr`.T_DMEM_LIST AS A WHERE A.CNTRCT_LEAD_ID IS NOT NULL;
# MAGIC
# MAGIC -- DELETE FROM psas_di_dev.`340b_slvr`.T_MT_ACCOUNT_LIST;
# MAGIC
# MAGIC -- ---06 AQ_Account_List
# MAGIC -- INSERT INTO psas_di_dev.`340b_slvr`.T_MT_ACCOUNT_LIST ( CUST_ACCT_ID, CUST_ACCT_NAME, CUST_CHN_ID, ENTITY_TYPE, EXPANSION_ENTITY, ACCT_CLASSIFICATION )
# MAGIC -- SELECT A.CUST_ACCT_ID, A.CUST_ACCT_NAME, A.CUST_CHN_ID, A.ENTITY_TYPE, B.EXPANSION_ENTITY, A.ACCT_CLASSIFICATION 
# MAGIC -- FROM psas_di_dev.`340b_gold`.T_PHS_AUDIT_2 AS A INNER JOIN psas_di_dev.`340b_slvr`.T_LUTL_ENTITY AS B ON A.ENTITY_TYPE = B.ENTITY_TYPE
# MAGIC -- WHERE (A.CUST_CHN_ID != '989') AND (A.ACCT_CLASSIFICATION='003' OR A.ACCT_CLASSIFICATION in ('004','005')) AND (UPPER(A.STATUS)='ACTIVE');
# MAGIC
# MAGIC
# MAGIC -- DELETE FROM psas_di_dev.`340b_slvr`.T_MAINLEAD;
# MAGIC
# MAGIC -- ----08 AQ_MainLead
# MAGIC -- INSERT INTO psas_di_dev.`340b_slvr`.T_MAINLEAD(CUST_ACCT_ID, CNTRCT_LEAD_ID)
# MAGIC -- SELECT DISTINCT A.CUST_ACCT_ID, B.CNTRCT_LEAD_ID
# MAGIC -- FROM psas_di_dev.`340b_slvr`.T_MT_ACCOUNT_LIST AS A INNER JOIN psas_di_dev.`340b_slvr`.T_DMEM_LIST AS B ON A.CUST_ACCT_ID = B.CUST_ACCT_ID WHERE (B.CNTRCT_LEAD_ID='178018' OR B.CNTRCT_LEAD_ID='181126');
# MAGIC
# MAGIC -- MERGE INTO psas_di_dev.`340b_gold`.T_PHS_AUDIT_2 AS A
# MAGIC -- USING psas_di_dev.`340b_slvr`.T_MAINLEAD AS B
# MAGIC -- ON A.CUST_ACCT_ID = B.CUST_ACCT_ID
# MAGIC -- WHEN MATCHED AND (A.MAIN_LEAD IS NULL OR A.MAIN_LEAD != B.CNTRCT_LEAD_ID) THEN
# MAGIC -- UPDATE SET A.MAIN_LEAD = B.CNTRCT_LEAD_ID;
# MAGIC
# MAGIC -- DELETE  FROM psas_di_dev.`340b_slvr`.T_MT_WAC_DMEM;
# MAGIC    
# MAGIC -- --04 AQ_WAC_Accounts_DMEM_PVP
# MAGIC -- INSERT INTO psas_di_dev.`340b_slvr`.T_MT_WAC_DMEM ( CUST_ACCT_ID, LEAD, LEAD_NAME, ENTITY_TYPE )
# MAGIC -- SELECT A.CUST_ACCT_ID, A.LEAD,A.LEAD_NAME, A.ENTITY_TYPE
# MAGIC -- FROM (SELECT A.CUST_ACCT_ID, A.CUST_ACCT_NAME, B.LEAD, B.LEAD_NAME, A.PHS_340B_ID, PVP_PARTICIPATION_FLAG, A.ENTITY_TYPE
# MAGIC -- FROM  psas_di_dev.`340b_gold`.T_PHS_AUDIT_2 AS A , (SELECT DISTINCT A.LEAD, A.LEAD_NAME, A.PVP_FLAG, A.WAC, A.EXPANSION
# MAGIC -- FROM psas_di_dev.`340b_slvr`.T_LUTL_PHS_LEADS AS A 
# MAGIC -- WHERE (A.LEAD != '293388' AND A.WAC ='Yes'))  B 
# MAGIC -- WHERE ((A.PVP_PARTICIPATION_FLAG='Y') AND A.ENTITY_TYPE IN ('CAN','DSH','PED') 
# MAGIC --        AND (A.CUST_CHN_ID != '989') AND (A.ACCT_CLASSIFICATION='003') AND (UPPER(A.STATUS)='ACTIVE') 
# MAGIC --        AND (CHARINDEX('A34', A.CUST_ACCT_NAME)>0))) A INNER JOIN (SELECT DISTINCT A.LEAD, A.LEAD_NAME, A.PVP_FLAG, A.WAC, A.EXPANSION
# MAGIC -- FROM psas_di_dev.`340b_slvr`.T_LUTL_PHS_LEADS AS A 
# MAGIC -- WHERE (A.LEAD != '293388' AND A.WAC ='Yes')) B ON (A.PVP_PARTICIPATION_FLAG = B.PVP_FLAG) AND (A.LEAD = B.LEAD);
# MAGIC
# MAGIC -- DELETE FROM psas_di_dev.`340b_slvr`.T_MT_PHS_DMEM;
# MAGIC
# MAGIC -- INSERT INTO psas_di_dev.`340b_slvr`.T_MT_PHS_DMEM ( CUST_ACCT_ID, LEAD, LEAD_NAME, Expansion_Entity, ENTITY_TYPE )
# MAGIC -- SELECT A.CUST_ACCT_ID, A.LEAD, A.LEAD_NAME, A.Expansion_Entity, A.ENTITY_TYPE
# MAGIC -- FROM (SELECT A.CUST_ACCT_ID, A.CUST_ACCT_NAME,REPLACE(UPPER(A.PVP_PARTICIPATION_FLAG),'TRUE','Y') AS PVP_PARTICIPATION_FLAG, B.LEAD, B.LEAD_NAME, A.PHS_340B_ID, CASE
# MAGIC --     WHEN ENTITY_TYPE='RRC' THEN 'Y'
# MAGIC -- 	WHEN ENTITY_TYPE='SCH' THEN 'Y'
# MAGIC -- 	WHEN ENTITY_TYPE='CAN' THEN 'Y'
# MAGIC -- 	WHEN ENTITY_TYPE='CAH' THEN 'Y'
# MAGIC -- 	ELSE 'N'
# MAGIC -- END AS Expansion_Entity, A.ENTITY_TYPE
# MAGIC -- FROM psas_di_dev.`340b_gold`.T_PHS_AUDIT_2 AS A, (SELECT DISTINCT A.LEAD, A.LEAD_NAME, A.PVP_Flag, A.PHS, A.Expansion
# MAGIC -- FROM psas_di_dev.`340b_slvr`.T_LUTL_PHS_LEADS AS A 
# MAGIC -- WHERE ((A.LEAD != '293388') AND (A.PHS='Yes'))) B 
# MAGIC -- WHERE ((A.CUST_CHN_ID != '989') AND (A.ACCT_CLASSIFICATION in ('004','005')) AND (UPPER(A.STATUS)='ACTIVE')))  A INNER JOIN 
# MAGIC -- (SELECT DISTINCT A.LEAD, A.LEAD_NAME, A.PVP_Flag, A.PHS, A.Expansion
# MAGIC -- FROM psas_di_dev.`340b_slvr`.T_LUTL_PHS_LEADS AS A 
# MAGIC -- WHERE ((A.LEAD != '293388') AND (A.PHS='Yes'))) B ON (A.LEAD = B.LEAD) AND ((A.Expansion_Entity = B.Expansion) OR (A.PVP_PARTICIPATION_FLAG = B.PVP_Flag));
# MAGIC
# MAGIC

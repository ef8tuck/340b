-- Databricks notebook source
-- MAGIC %md
-- MAGIC

-- COMMAND ----------

--DELETE FROM {interDBName}.{interSchemaName}.T_MNC_LIST;

INSERT INTO {interDBName}.{interSchemaName}.T_MNC_LIST ( MEM ) 
SELECT DISTINCT T_MNC_PHS.Mem 
FROM {coreDBName}.{coreSchemaName}.T_MNC_PHS AS T_MNC_PHS
WHERE T_MNC_PHS.MEM NOT IN ('A34','C34'); 

--DELETE FROM {coreDBName}.{coreSchemaName}.T_ACCOUNT_MNC_LIST;




-- COMMAND ----------

--03 Q_Account_MNC_List
CREATE OR REPLACE VIEW V_ACCOUNT_MNC_LIST_03 AS
SELECT T_PHS_AUDIT.CUST_ACCT_ID, T_MNC_LIST.MEM AS MNC_CODE 
FROM {interDBName}.{interSchemaName}.T_MNC_LIST AS T_MNC_LIST, {coreDBName}.{coreSchemaName}.T_PHS_AUDIT AS T_PHS_AUDIT
WHERE T_PHS_AUDIT.ACCT_CLASSIFICATION IN ('005','004','003') AND T_PHS_AUDIT.CUST_CHN_ID <> '989' AND UPPER(T_PHS_AUDIT.STATUS)='ACTIVE';

-- COMMAND ----------

INSERT INTO {coreDBName}.{coreSchemaName}.T_ACCOUNT_MNC_LIST ( CUST_ACCT_ID, MNC_CODE ) as
SELECT V_ACCOUNT_MNC_LIST_03.CUST_ACCT_ID, V_ACCOUNT_MNC_LIST_03.MNC_CODE 
FROM V_ACCOUNT_MNC_LIST_03 LEFT JOIN {coreDBName}.{coreSchemaName}.T_MNC_PHS AS T_MNC_PHS ON (V_ACCOUNT_MNC_LIST_03.MNC_CODE = T_MNC_PHS.MEM) AND (V_ACCOUNT_MNC_LIST_03.CUST_ACCT_ID = T_MNC_PHS.Customer) 
WHERE T_MNC_PHS.Customer Is Null AND T_MNC_PHS.Mem Is Null;

-- COMMAND ----------

--06 Q_MNC_Exceptions
CREATE OR REPLACE VIEW V_MNC_EXCEPTIONS_06 AS
SELECT T_PHS_AUDIT.CUST_ACCT_ID, T_PHS_AUDIT.CUST_ACCT_NAME, T_PHS_AUDIT.ACCT_CLASSIFICATION, T_ACCOUNT_MNC_LIST."MNC_CODE", T_PHS_AUDIT.DC_NAME, T_PHS_AUDIT.ACTIVATION_DATE, T_PHS_AUDIT.UPDATE_SAP
FROM psas_di_dev.`340b_brnz`.T_ACCOUNT_MNC_LIST AS T_ACCOUNT_MNC_LIST INNER JOIN psas_di_dev.`340b_brnz`.T_PHS_AUDIT AS T_PHS_AUDIT ON T_ACCOUNT_MNC_LIST.CUST_ACCT_ID = T_PHS_AUDIT.CUST_ACCT_ID LEFT JOIN {coreDBName}.{coreSchemaName}.T_LUTL_NON_ORDERING_ACCOUNTS AS LUTL_NON_ORDERING_ACCOUNTS  ON T_PHS_AUDIT.CUST_ACCT_ID = LUTL_NON_ORDERING_ACCOUNTS.CUST_ACCT_ID
WHERE (T_PHS_AUDIT.ACCT_CLASSIFICATION in ('004','005') And T_PHS_AUDIT.CUST_CHN_ID Not In ('000','989') 
       And LUTL_NON_ORDERING_ACCOUNTS.ID Is Null) Or (T_PHS_AUDIT.ACCT_CLASSIFICATION='003' 
       And LUTL_NON_ORDERING_ACCOUNTS.ID Is Null And CHARINDEX('34',T_PHS_AUDIT.CUST_ACCT_NAME)>0);

-- COMMAND ----------

--07 Q_MNC_Summary
CREATE OR REPLACE VIEW V_MNC_SUMMARY_O7 AS
SELECT V_MNC_EXCEPTIONS_06.MNC_CODE AS MNC_CODE, IFF(ACCT_CLASSIFICATION in ('004','005'),'PHS','WAC') AS ACCT_TYPE, Count(V_MNC_Exceptions_06.CUST_ACCT_ID) AS Count
FROM V_MNC_EXCEPTIONS_06
GROUP BY V_MNC_EXCEPTIONS_06.MNC_CODE, IFF(ACCT_CLASSIFICATION in ('004','005'),'PHS','WAC')
ORDER BY IFF(ACCT_CLASSIFICATION in ('004','005'),'PHS','WAC'), V_MNC_EXCEPTIONS_06.MNC_CODE;

-- COMMAND ----------

--08 Q_MNC_Summary_Crosstab 
CREATE OR REPLACE VIEW V_MNC_SUMMARY_CROSSTAB_08 AS 
SELECT *
FROM V_MNC_SUMMARY_O7
PIVOT(SUM(V_MNC_SUMMARY_O7.COUNT) FOR V_MNC_SUMMARY_O7.ACCT_TYPE IN ('PHS','WAC'));

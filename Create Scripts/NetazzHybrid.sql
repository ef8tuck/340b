-- Databricks notebook source
truncate table psas_di_dev.340b_gold.T_PHS_AUDIT_PART1;

-- COMMAND ----------

drop table psas_di_dev.340b_gold.T_PHS_AUDIT_PART1;

-- COMMAND ----------

 CREATE TABLE IF NOT EXISTS psas_di_dev.340b_gold.T_PHS_AUDIT_PART1 (
  CUST_ACCT_ID STRING,
	CUST_ACCT_NAME STRING,
	ACCT_CLASSIFICATION STRING,
	CUST_CHN_ID STRING,
	CHAIN_NAM STRING,
	NATIONAL_GRP_CD STRING,
	NATIONAL_SUBGRP_CD STRING,
	DIST_CHANNEL STRING,
	HOME_DC_ID STRING,
	PHS_340B_ID STRING,
	DEA_FAMILY STRING,
	ACTIVE_CUST_IND STRING,
	UPDATE_SAP DATE,
	ACTIVATION_DATE DATE,
	ENTITY_TYPE STRING,
	COGS_RX DOUBLE,
	COGS_OTC DOUBLE,
	ADDR_DELIVERY STRING ,
	ADDR_INVOICE STRING ,
	DEA_NUM STRING,
	BUS_TYP_CD STRING,
	RX_BILL_PLAN STRING,
	SALES_LSTMTH DOUBLE,
	SALES_CURMTH DOUBLE,
	GPO_ID STRING,
	GPO_ACCT STRING,
	DLVRY_RTE_NUM STRING,
	DLVRY_RTE_STOP_NUM STRING,
	REGION_CD STRING,
	DELIVERY_DOC STRING,
	NATIONAL_GRP_NAME STRING,
	NATIONAL_SUBGRP_NAME STRING,
	FIRST_ORDER DATE,
	UPDATE_ACTIVESTATUS DATE,
	UPDATE_340BID DATE,
	LAST_ORDER DATE,
	SALES_REP STRING,
	REGION_NAME STRING
) LOCATION 'abfss://catalog@stpsasdi340bdev.dfs.core.windows.net/gold/T_PHS_AUDIT_PART1'
TBLPROPERTIES (
  'delta.feature.allowColumnDefaults' = 'supported',
  'delta.feature.appendOnly' = 'supported',
  'delta.feature.invariants' = 'supported',
  'delta.minReaderVersion' = '1',
  'delta.minWriterVersion' = '7',
  'spark.sql.files.ignoreMissingFiles'=true
);

-- COMMAND ----------

-- INSERT INTO {netezzaHybridPHSAuditTableName} (CUST_ACCT_ID)
-- SELECT V.CUST_ACCT_ID
-- FROM PRD_PSAS_DB.RPT.T_DM_VSTX_CUST V LEFT OUTER JOIN {netezzaHybridPHSAuditTableName} A
-- ON V.CUST_ACCT_ID = A.CUST_ACCT_ID
-- INNER JOIN PRD_PSAS_DB.RPT.T_IW_CUST_ACCT CA
-- ON V.CUST_ACCT_ID = CA.CUST_ACCT_ID
-- WHERE (V.MCK_KU_ACCT_CLAS IN ('002','003','004','005') OR (CA.NATL_GRP_CD = '0240' AND V.MCK_KU_ACCT_CLAS not in ('004','005')) OR (V.MCK_KU_CHNL_TYP = '20'))
-- AND A.CUST_ACCT_ID IS NULL
-- AND CA.NATL_GRP_CD NOT IN ('0041','0571','0664','0771')
-- AND POSITION(' TEMPLATE' IN CA.CUST_ACCT_NAM) = 0;



--CUST_ACCT_ID

INSERT INTO psas_di_dev.340b_gold.T_PHS_AUDIT_PART1 (CUST_ACCT_ID)
SELECT V.CUST_ACCT_ID
FROM dev_psas_db.RPT.T_DM_VSTX_CUST V LEFT OUTER JOIN psas_di_dev.340b_gold.T_PHS_AUDIT_PART1 A
ON V.CUST_ACCT_ID = A.CUST_ACCT_ID
INNER JOIN dev_psas_db.RPT.T_IW_CUST_ACCT CA
ON V.CUST_ACCT_ID = CA.CUST_ACCT_ID
WHERE (V.MCK_KU_ACCT_CLAS IN ('002','003','004','005') OR (CA.NATL_GRP_CD = '0240' AND V.MCK_KU_ACCT_CLAS not in ('004','005')) OR (V.MCK_KU_CHNL_TYP = '20'))
AND A.CUST_ACCT_ID IS NULL
AND CA.NATL_GRP_CD NOT IN ('0041','0571','0664','0771')
AND POSITION(' TEMPLATE' IN CA.CUST_ACCT_NAM) = 0;


MERGE INTO psas_di_dev.`340b_gold`.T_PHS_AUDIT_PART1 A
USING dev_psas_db.RPT.T_IW_CUST_ACCT CA
ON A.CUST_ACCT_ID = CA.CUST_ACCT_ID
WHEN MATCHED AND (A.CUST_ACCT_NAME IS NULL OR A.CUST_ACCT_NAME <> CA.CUST_ACCT_NAM)
THEN UPDATE SET A.CUST_ACCT_NAME = CA.CUST_ACCT_NAM;

UPDATE psas_di_dev.`340b_gold`.T_PHS_AUDIT_PART1 A
SET A.ACCT_CLASSIFICATION = (
    SELECT MAX(V.MCK_KU_ACCT_CLAS)
    FROM dev_psas_db.RPT.T_DM_VSTX_CUST V
    WHERE A.CUST_ACCT_ID = V.CUST_ACCT_ID
)
WHERE A.ACCT_CLASSIFICATION IS NULL
   OR A.ACCT_CLASSIFICATION <> (
       SELECT MAX(V.MCK_KU_ACCT_CLAS)
       FROM dev_psas_db.RPT.T_DM_VSTX_CUST V
       WHERE A.CUST_ACCT_ID = V.CUST_ACCT_ID
   );

MERGE INTO psas_di_dev.340b_gold.T_PHS_AUDIT_PART1 A
USING dev_psas_db.RPT.T_IW_CUST_ACCT CA
ON A.CUST_ACCT_ID = CA.CUST_ACCT_ID
WHEN MATCHED AND (A.CUST_CHN_ID IS NULL OR A.CUST_CHN_ID <> CA.ACCT_CHN_ID)
THEN UPDATE SET A.CUST_CHN_ID = CA.ACCT_CHN_ID;

UPDATE psas_di_dev.340b_gold.T_PHS_AUDIT_PART1 A
SET A.NATIONAL_GRP_CD = (
    SELECT MAX(CA.NATL_GRP_CD)
    FROM dev_psas_db.RPT.T_IW_CUST_ACCT CA
    WHERE A.CUST_ACCT_ID = CA.CUST_ACCT_ID
)
WHERE A.NATIONAL_GRP_CD IS NULL 
OR A.NATIONAL_GRP_CD <> (
    SELECT MAX(CA.NATL_GRP_CD)
    FROM dev_psas_db.RPT.T_IW_CUST_ACCT CA
    WHERE A.CUST_ACCT_ID = CA.CUST_ACCT_ID
);


MERGE INTO psas_di_dev.340b_gold.T_PHS_AUDIT_PART1 A
USING SBX_PSAS_DB.MHS_RNA.T_CHAINS C
ON A.CUST_CHN_ID = C.CHAIN_ID
WHEN MATCHED AND ((A.CHAIN_NAM IS NULL AND C.CHAIN_NAM IS NOT NULL) OR A.CHAIN_NAM <> C.CHAIN_NAM)
THEN UPDATE SET A.CHAIN_NAM = C.CHAIN_NAM;

MERGE INTO psas_di_dev.`340b_gold`.t_phs_audit_part1 A
USING psas_di_dev.`340b_gold`.MHS_RNA_CUST_ACCT M
ON A.CUST_ACCT_ID = M.CUST_ACCT_ID
WHEN MATCHED AND (A.CHAIN_NAM IS NULL OR A.CHAIN_NAM <> M.CHAIN_NAM)
AND (A.CUST_CHN_ID IS NOT NULL AND A.CUST_CHN_ID <> '')
THEN UPDATE SET A.CHAIN_NAM = M.CHAIN_NAM;

MERGE INTO psas_di_dev.`340b_gold`.T_PHS_AUDIT_PART1 A
USING SBX_PSAS_DB.MHS_RNA.T_NATL_GRP N
ON A.NATIONAL_GRP_CD = N.NATL_GRP_ID
WHEN MATCHED AND 
    ((A.NATIONAL_GRP_NAME IS NULL AND N.NATL_GRP_NAM IS NOT NULL) OR A.NATIONAL_GRP_NAME <> N.NATL_GRP_NAM)
THEN 
    UPDATE SET A.NATIONAL_GRP_NAME = N.NATL_GRP_NAM;

MERGE INTO psas_di_dev.`340b_gold`.T_PHS_AUDIT_PART1 AS A
USING psas_di_dev.`340b_gold`.MHS_RNA_CUST_ACCT AS M
ON A.CUST_ACCT_ID = M.CUST_ACCT_ID
WHEN MATCHED AND 
    (A.NATIONAL_GRP_NAME IS NULL OR A.NATIONAL_GRP_NAME <> M.NATL_GRP_NAM) AND 
    (A.NATIONAL_GRP_CD IS NOT NULL AND A.NATIONAL_GRP_CD <> '')
THEN UPDATE SET A.NATIONAL_GRP_NAME = M.NATL_GRP_NAM;




-- COMMAND ----------

--CUST_ACCT_NAME
-- UPDATE {netezzaHybridPHSAuditTableName} A
-- SET A.CUST_ACCT_NAME = CA.CUST_ACCT_NAM
-- FROM PRD_PSAS_DB.RPT.T_IW_CUST_ACCT CA
-- WHERE (A.CUST_ACCT_NAME IS NULL OR A.CUST_ACCT_NAME <> CA.CUST_ACCT_NAM)
-- AND A.CUST_ACCT_ID = CA.CUST_ACCT_ID;




-- COMMAND ----------

-- ACCOUNT CLASSIFICATION
-- UPDATE {netezzaHybridPHSAuditTableName} A
-- SET A.ACCT_CLASSIFICATION = V.MCK_KU_ACCT_CLAS
-- FROM PRD_PSAS_DB.RPT.T_DM_VSTX_CUST V
-- WHERE (A.ACCT_CLASSIFICATION IS NULL OR A.ACCT_CLASSIFICATION <> V.MCK_KU_ACCT_CLAS)
-- AND A.CUST_ACCT_ID = V.CUST_ACCT_ID;




-- COMMAND ----------

-- CHAIN ID
-- UPDATE {netezzaHybridPHSAuditTableName} A
-- SET A.CUST_CHN_ID = CA.ACCT_CHN_ID
-- FROM PRD_PSAS_DB.RPT.T_IW_CUST_ACCT CA
-- WHERE (A.CUST_CHN_ID IS NULL OR A.CUST_CHN_ID <> CA.ACCT_CHN_ID)
-- AND A.CUST_ACCT_ID = CA.CUST_ACCT_ID;



-- COMMAND ----------

-- NATIONAL GROUP CODE
-- UPDATE {netezzaHybridPHSAuditTableName} A
-- SET A.NATIONAL_GRP_CD = CA.NATL_GRP_CD
-- FROM PRD_PSAS_DB.RPT.T_IW_CUST_ACCT CA
-- WHERE (A.NATIONAL_GRP_CD IS NULL OR A.NATIONAL_GRP_CD <> CA.NATL_GRP_CD)
-- AND A.CUST_ACCT_ID = CA.CUST_ACCT_ID;



-- COMMAND ----------

--table unavailable
--CHAIN_NAM
-- COULD NOT LOCATE "CHAIN NAME" IN NETEZZA. THE NAME IS PULLED IN FROM THE MHS_RNA.MHS_RNA_CUST_ACCT TABLE BUT THIS IS ONLY FOR MHS
-- ACCOUNTS. A CHAIN TABLE CALLED T_CHAINS WAS CREATED IN THE MHS SANDBOX TO MAKE ALLOWANCES FOR NON-MHS ACCOUNTS.
-- FIRST, IF THE CHAIN NAME HAS CHANGED (RARE BUT IT HAPPENS) IT UPDATES THE T_CHAINS TABLE. CHAIN 585 IS EXCLUDED FROM THIS CHECK BECAUSE
-- TEMPLATE ACCOUNTS ARE PULLING IN DIFFERENT CHAIN NAMES AND IT IS MESSING UP THE QUERY. SECOND, THE CHAIN NAME IS
-- PULLED IN FROM THE T_CHAINS TABLE IF THE NAME IS EITHER BLANK OR DIFFERENT. FINALLY, THE CHAIN NAME IS PULLED IN FROM
-- THE MHS_RNA.MHS_RNA_CUST_ACCT IF IT IS EITHER BLANK OR DIFFERENT.
-- UPDATE {netezzaHybridPHSAuditTableName} A 
-- SET A.CHAIN_NAM = C.CHAIN_NAM
-- FROM SBX_PSAS_DB.MHS_RNA.T_CHAINS C
-- WHERE ((A.CHAIN_NAM IS NULL AND C.CHAIN_NAM IS NOT NULL) OR A.CHAIN_NAM <> C.CHAIN_NAM)
-- AND C.CHAIN_ID = A.CUST_CHN_ID;



-- COMMAND ----------

create or replace view psas_di_dev.340b_gold.MHS_RNA_CUST_ACCT(
	CUST_ACCT_ID,
	CUST_ACCT_NAM,
	NATL_GRP_CD,
	NATL_GRP_NAM,
	NATL_SUB_GRP_CD,
	NATL_SUB_GRP_NAM,
	ACCT_CHN_ID,
	CHAIN_NAM,
	CUST_RGN_NUM,
	CUST_RGN_NAM,
	CUST_DSTRCT_NUM,
	CUST_DSTRCT_NAM,
	MCK_KU_DSCSA,
	MCK_KU_ACCT_CLAS,
	MCK_KU_ACCT_CLAS_DESC,
	MCK_KU_GPOS,
	MCK_KU_GPOS_DESC,
	MCK_KU_GPO_ACCT
) as 
SELECT A.CUST_ACCT_ID, A.CUST_ACCT_NAM, A.NATL_GRP_CD, B.NATL_GRP_NAM, A.NATL_SUB_GRP_CD, C.NATL_SUB_GRP_NAM, A.ACCT_CHN_ID, D.CUST_GRP_NAM AS CHAIN_NAM, A.CUST_RGN_NUM, F.CUST_RGN_NAM, A.CUST_DSTRCT_NUM, G.CUST_DSTRCT_NAM, E.MCK_KU_DSCSA, E.MCK_KU_ACCT_CLAS, E.MCK_KU_ACCT_CLAS_DESC, E.MCK_KU_GPOS, E.MCK_KU_GPOS_DESC, E.MCK_KU_GPO_ACCT
 
FROM ((((((dev_psas_db.RPT.T_IW_CUST_ACCT A 
	LEFT JOIN dev_psas_db.RPT.T_NATL_GRP B ON ((A.NATL_GRP_CD = B.NATL_GRP_CD))) 
	LEFT JOIN dev_psas_db.RPT.T_NATL_SUB_GRP C 
		ON (((A.NATL_GRP_CD = C.NATL_GRP_CD) AND (A.NATL_SUB_GRP_CD = C.NATL_SUB_GRP_CD)))) 
	LEFT JOIN dev_psas_db.RPT.T_IW_CUST_GRP D ON ((A.ACCT_CHN_ID = D.CUST_GRP_CD))) 
	LEFT JOIN dev_psas_db.RPT.T_DM_VSTX_CUST E ON ((A.CUST_ACCT_ID = E.CUST_ACCT_ID))) 
	LEFT JOIN dev_psas_db.RPT.T_CUST_RGN F ON ((((A.NATL_GRP_CD = F.NATL_GRP_CD) AND (A.NATL_SUB_GRP_CD = F.NATL_SUB_GRP_CD)) AND (A.CUST_RGN_NUM = F.CUST_RGN_NUM)))) 
	LEFT JOIN dev_psas_db.RPT.T_CUST_DSTRCT G ON (((((A.NATL_GRP_CD = G.NATL_GRP_CD) AND (A.NATL_SUB_GRP_CD = G.NATL_SUB_GRP_CD)) AND (A.CUST_RGN_NUM = G.CUST_RGN_NUM)) AND (A.CUST_DSTRCT_NUM = G.CUST_DSTRCT_NUM))));

-- COMMAND ----------

--CHAIN_NAM
-- UPDATE {netezzaHybridPHSAuditTableName} A
-- SET A.CHAIN_NAM = M.CHAIN_NAM
-- FROM SBX_PSAS_DB.MHS_RNA.MHS_RNA_CUST_ACCT M
-- WHERE (A.CHAIN_NAM IS NULL OR A.CHAIN_NAM <> M.CHAIN_NAM)
-- AND (A.CUST_CHN_ID IS NOT NULL AND A.CUST_CHN_ID <> '')
-- AND A.CUST_ACCT_ID = M.CUST_ACCT_ID;


-- COMMAND ----------

--table unavailable
--NATIONAL_GRP_NAME



-- COMMAND ----------

--NATIONAL_GRP_NAME


-- COMMAND ----------

-- NATIONAL SUB GROUP
MERGE INTO psas_di_dev.340b_gold.T_PHS_AUDIT_PART1 A
USING dev_psas_db.RPT.T_IW_CUST_ACCT CA
ON A.CUST_ACCT_ID = CA.CUST_ACCT_ID
WHEN MATCHED AND (A.NATIONAL_SUBGRP_CD IS NULL OR A.NATIONAL_SUBGRP_CD <> CA.NATL_SUB_GRP_CD)
THEN UPDATE SET A.NATIONAL_SUBGRP_CD = CA.NATL_SUB_GRP_CD;

-- COMMAND ----------


--NATIONAL_GRP_NAME
MERGE INTO psas_di_dev.`340b_gold`.T_PHS_AUDIT_PART1 AS A
USING psas_di_dev.`340b_gold`.MHS_RNA_CUST_ACCT AS M
ON A.CUST_ACCT_ID = M.CUST_ACCT_ID
WHEN MATCHED AND 
    (A.NATIONAL_GRP_NAME IS NULL OR A.NATIONAL_GRP_NAME <> M.NATL_GRP_NAM) AND 
    (A.NATIONAL_GRP_CD IS NOT NULL AND A.NATIONAL_GRP_CD <> '')
THEN UPDATE SET A.NATIONAL_GRP_NAME = M.NATL_GRP_NAM;

-- COMMAND ----------

-- #REGION CD
UPDATE psas_di_dev.340b_gold.T_PHS_AUDIT_PART1 A
SET A.REGION_CD = (
    SELECT MAX(CA.CUST_RGN_NUM)
    FROM dev_psas_db.RPT.T_IW_CUST_ACCT CA
    WHERE A.CUST_ACCT_ID = CA.CUST_ACCT_ID
)
WHERE A.REGION_CD IS NULL 
OR A.REGION_CD <> (
    SELECT MAX(CA.CUST_RGN_NUM)
    FROM dev_psas_db.RPT.T_IW_CUST_ACCT CA
    WHERE A.CUST_ACCT_ID = CA.CUST_ACCT_ID
)

-- COMMAND ----------

--REGION_NAME
MERGE INTO psas_di_dev.`340b_gold`.t_phs_audit_part1 A
USING psas_di_dev.`340b_gold`.MHS_RNA_CUST_ACCT M
ON A.CUST_ACCT_ID = M.CUST_ACCT_ID
WHEN MATCHED AND 
    ((A.REGION_NAME IS NULL AND M.CUST_RGN_NAM IS NOT NULL) OR A.REGION_NAME <> M.CUST_RGN_NAM)
THEN 
    UPDATE SET A.REGION_NAME = M.CUST_RGN_NAM;

-- COMMAND ----------

--REGION_NAME
UPDATE psas_di_dev.340b_gold.T_PHS_AUDIT_PART1 A
SET A.REGION_NAME = NULL
WHERE (A.REGION_CD = '' OR A.REGION_CD IS NULL)
AND (A.REGION_NAME <> '' OR A.REGION_NAME IS NOT NULL);

-- COMMAND ----------

-- DELIVERY DOC CODE
MERGE INTO psas_di_dev.340b_gold.T_PHS_AUDIT_PART1 A
USING dev_psas_db.RPT.T_IW_CUST_ACCT CA
ON A.CUST_ACCT_ID = CA.CUST_ACCT_ID
WHEN MATCHED AND (A.DELIVERY_DOC IS NULL OR A.DELIVERY_DOC <> CA.DLVRY_DOC_IND)
THEN UPDATE SET A.DELIVERY_DOC = CA.DLVRY_DOC_IND;

-- COMMAND ----------

-- DIST_CHANNEL
UPDATE psas_di_dev.340b_gold.T_PHS_AUDIT_PART1 A
SET A.DIST_CHANNEL = (
    SELECT Max(V.MCK_KU_CHNL_TYP)
    FROM dev_psas_db.RPT.T_DM_VSTX_CUST V
    WHERE A.CUST_ACCT_ID = V.CUST_ACCT_ID
)
WHERE A.DIST_CHANNEL IS NULL 
OR A.DIST_CHANNEL <> (
    SELECT Max(V.MCK_KU_CHNL_TYP)
    FROM dev_psas_db.RPT.T_DM_VSTX_CUST V
    WHERE A.CUST_ACCT_ID = V.CUST_ACCT_ID
);

-- COMMAND ----------

-- HOME_DC_ID
UPDATE psas_di_dev.340b_gold.T_PHS_AUDIT_PART1 A
SET A.HOME_DC_ID = (
    SELECT max(CA.HOME_DC_ID)
    FROM dev_psas_db.RPT.T_IW_CUST_ACCT CA
    WHERE A.CUST_ACCT_ID = CA.CUST_ACCT_ID
)
WHERE A.HOME_DC_ID IS NULL OR A.HOME_DC_ID <> (
    SELECT max(CA.HOME_DC_ID)
    FROM dev_psas_db.RPT.T_IW_CUST_ACCT CA
    WHERE A.CUST_ACCT_ID = CA.CUST_ACCT_ID
);

-- COMMAND ----------

-- UPDATE_340B ID
-- THESE THREE QUERIES MUST BE RUN BEFORE PHS_340B_ID; IT INDICATES CHANGES
-- 340B ID CHANGE
UPDATE psas_di_dev.340b_gold.t_phs_audit_part1
SET UPDATE_340BID = CURRENT_TIMESTAMP()
WHERE CUST_ACCT_ID IN (
    SELECT V.CUST_ACCT_ID
    FROM dev_psas_db.RPT.T_DM_VSTX_CUST V
    WHERE psas_di_dev.340b_gold.t_phs_audit_part1.CUST_ACCT_ID = V.CUST_ACCT_ID
    AND (psas_di_dev.340b_gold.t_phs_audit_part1.PHS_340B_ID IS NOT NULL AND psas_di_dev.340b_gold.t_phs_audit_part1.PHS_340B_ID <> V.XFD_KU_340B_ID)
    AND V.XFD_KU_340B_ID <> '00000000000000000000'
);

-- COMMAND ----------

-- CHANGE FROM BLANK
--UPDATE_340BID
UPDATE psas_di_dev.`340b_gold`.T_PHS_AUDIT_PART1 A
SET UPDATE_340BID = CURRENT_TIMESTAMP()
WHERE A.CUST_ACCT_ID IN (
    SELECT V.CUST_ACCT_ID
    FROM dev_psas_db.RPT.T_DM_VSTX_CUST V
    WHERE A.CUST_ACCT_ID = V.CUST_ACCT_ID
    AND A.PHS_340B_ID IS NULL
    AND V.XFD_KU_340B_ID <> '00000000000000000000'
)
AND A.PHS_340B_ID IS NULL
AND EXISTS (
    SELECT 1
    FROM dev_psas_db.RPT.T_DM_VSTX_CUST V
    WHERE A.CUST_ACCT_ID = V.CUST_ACCT_ID
    AND V.XFD_KU_340B_ID <> '00000000000000000000'
);

-- COMMAND ----------

-- CHANGE TO BLANK
--UPDATE_340BID
UPDATE psas_di_dev.`340b_gold`.T_PHS_AUDIT_PART1
SET UPDATE_340BID = CURRENT_TIMESTAMP()
WHERE CUST_ACCT_ID IN (
    SELECT V.CUST_ACCT_ID
    FROM dev_psas_db.RPT.T_DM_VSTX_CUST V
    WHERE V.XFD_KU_340B_ID = '00000000000000000000'
)
AND PHS_340B_ID IS NOT NULL;

-- COMMAND ----------

-- PHS_340B_ID
UPDATE psas_di_dev.`340b_gold`.T_PHS_AUDIT_PART1 A
SET A.PHS_340B_ID = (
    SELECT RTRIM(MAX(V.XFD_KU_340B_ID))
    FROM dev_psas_db.RPT.T_DM_VSTX_CUST V
    WHERE A.CUST_ACCT_ID = V.CUST_ACCT_ID
    AND V.XFD_KU_340B_ID <> '00000000000000000000'
)
WHERE A.PHS_340B_ID IS NULL 
OR A.PHS_340B_ID <> (
    SELECT MAX(V.XFD_KU_340B_ID)
    FROM dev_psas_db.RPT.T_DM_VSTX_CUST V
    WHERE A.CUST_ACCT_ID = V.CUST_ACCT_ID
    AND V.XFD_KU_340B_ID <> '00000000000000000000'
);

-- COMMAND ----------

--PHS_340B_ID
UPDATE psas_di_dev.`340b_gold`.T_PHS_AUDIT_PART1
SET PHS_340B_ID = NULL
WHERE CUST_ACCT_ID IN (
    SELECT V.CUST_ACCT_ID
    FROM dev_psas_db.RPT.T_DM_VSTX_CUST V
    WHERE V.XFD_KU_340B_ID = '00000000000000000000'
)
AND PHS_340B_ID IS NOT NULL;

-- COMMAND ----------

-- DEA FAMILY
UPDATE psas_di_dev.`340b_gold`.T_PHS_AUDIT_PART1 A
SET A.DEA_FAMILY = (
    SELECT MAX(V.XFD_KU_DEA_FAMILY)
    FROM dev_psas_db.RPT.T_DM_VSTX_CUST V
    WHERE A.CUST_ACCT_ID = V.CUST_ACCT_ID
)
WHERE A.DEA_FAMILY IS NULL 
OR A.DEA_FAMILY <> (
    SELECT MAX(V.XFD_KU_DEA_FAMILY)
    FROM dev_psas_db.RPT.T_DM_VSTX_CUST V
    WHERE A.CUST_ACCT_ID = V.CUST_ACCT_ID
);

-- COMMAND ----------

-- UPDATE_ACTIVE STATUS
-- THIS MUST BE RUN BEFORE ACTIVE_CUST_IND; IT INDICATES CHANGES
UPDATE psas_di_dev.`340b_gold`.T_PHS_AUDIT_PART1 A
SET UPDATE_ACTIVESTATUS = CURRENT_TIMESTAMP()
WHERE A.CUST_ACCT_ID IN (
    SELECT CA.CUST_ACCT_ID
    FROM dev_psas_db.RPT.T_IW_CUST_ACCT CA
    WHERE CA.ACTIVE_CUST_IND IS NOT NULL 
    AND A.CUST_ACCT_ID = CA.CUST_ACCT_ID
);

-- COMMAND ----------

-- ACTIVE_CUST_IND
MERGE INTO psas_di_dev.`340b_gold`.T_PHS_AUDIT_PART1 A
USING dev_psas_db.RPT.T_IW_CUST_ACCT CA
ON A.CUST_ACCT_ID = CA.CUST_ACCT_ID
WHEN MATCHED AND (A.IS_ACTIVE IS NULL OR A.IS_ACTIVE <> CA.ACTIVE_CUST_IND)
THEN UPDATE SET A.IS_ACTIVE = CA.ACTIVE_CUST_IND;

-- COMMAND ----------

-- ENTITY TYPE
UPDATE psas_di_dev.`340b_gold`.T_PHS_AUDIT_PART1
SET ENTITY_TYPE = NULL
WHERE ENTITY_TYPE IS NOT NULL;

UPDATE psas_di_dev.`340b_gold`.T_PHS_AUDIT_PART1
SET ENTITY_TYPE = SUBSTRING(PHS_340B_ID,1,3)
WHERE LENGTH(PHS_340B_ID) > 0 OR (ENTITY_TYPE IS NOT NULL AND ENTITY_TYPE <> SUBSTRING(PHS_340B_ID,1,3));

UPDATE psas_di_dev.`340b_gold`.T_PHS_AUDIT_PART1
SET ENTITY_TYPE = 'CH'
WHERE ENTITY_TYPE = 'CH1';

-- COMMAND ----------

-- ACTIVATION DATE
MERGE INTO psas_di_dev.`340b_gold`.T_PHS_AUDIT_PART1 A
USING dev_psas_db.RPT.T_DM_VSTX_CUST V
ON A.CUST_ACCT_ID = V.CUST_ACCT_ID
WHEN MATCHED AND 
    ((A.ACTIVATION_DATE IS NULL AND V.MCK_KU_ACTV_DT IS NOT NULL) OR A.ACTIVATION_DATE <> V.MCK_KU_ACTV_DT)
THEN UPDATE SET A.ACTIVATION_DATE = V.MCK_KU_ACTV_DT;

-- COMMAND ----------

-- RX COGS
MERGE INTO psas_di_dev.`340b_gold`.T_PHS_AUDIT_PART1 AS A
USING dev_psas_db.RPT.T_CUST_BILL_PLAN AS COGS
ON A.CUST_ACCT_ID = COGS.CUST_ACCT_ID
WHEN MATCHED AND (A.RX_COGS IS NULL OR A.RX_COGS <> CAST(COGS.RX_BILL_PLAN_PCT AS INT))
THEN UPDATE SET A.RX_COGS = CAST(COGS.RX_BILL_PLAN_PCT AS INT);

-- COMMAND ----------

-- OTC COGS
MERGE INTO psas_di_dev.`340b_gold`.T_PHS_AUDIT_PART1 A
USING dev_psas_db.RPT.T_CUST_BILL_PLAN COGS
ON A.CUST_ACCT_ID = COGS.CUST_ACCT_ID
WHEN MATCHED AND (A.OTC_COGS IS NULL OR A.OTC_COGS <> CAST(COGS.OTC_BILL_PLAN_PCT AS INT))
THEN UPDATE SET A.OTC_COGS = CAST(COGS.OTC_BILL_PLAN_PCT AS INT);

-- COMMAND ----------

-- ROUTE NUMBER
-- can't find column name
UPDATE psas_di_dev.`340b_gold`.T_PHS_AUDIT_PART1 A
SET A.DLVRY_RTE_NUM = (
    SELECT CA.DLVRY_RTE_NUM
    FROM dev_psas_db.RPT.T_IW_CUST_ACCT CA
    WHERE A.CUST_ACCT_ID = CA.CUST_ACCT_ID
)
WHERE A.DLVRY_RTE_NUM IS NULL 
OR A.DLVRY_RTE_NUM <> (
    SELECT CA.DLVRY_RTE_NUM
    FROM dev_psas_db.RPT.T_IW_CUST_ACCT CA
    WHERE A.CUST_ACCT_ID = CA.CUST_ACCT_ID
);

-- COMMAND ----------

-- STOP NUMBER
-- can't find column name
UPDATE psas_di_dev.`340b_gold`.T_PHS_AUDIT_PART1 A
SET A.DLVRY_RTE_STOP_NUM = CA.DLVRY_RTE_STOP_NUM
FROM dev_psas_db.RPT.T_IW_CUST_ACCT CA
WHERE (A.DLVRY_RTE_STOP_NUM IS NULL OR A.DLVRY_RTE_STOP_NUM <> CA.DLVRY_RTE_STOP_NUM)
AND A.CUST_ACCT_ID = CA.CUST_ACCT_ID;

-- ADDRESS CODES
-- I = BILL TO 
-- M = MAILING (MUST BE REGISTERED WITH HRSA)
-- D = SHIP TO (MUST BE REGISTERED WITH HRSA)
-- S = SOLD TO (ALWAYS MATCHES 'C')

-- COMMAND ----------

-- UPDATE MAILING ADDRESS
MERGE INTO psas_di_dev.`340b_gold`.T_PHS_AUDIT_PART1 A
USING (
  SELECT CUST_ACCT_ID, 
         ADDR_L1 || ', ' || CTY_NAM || ', ' || ST_CD || ' ' || ZIP_CD AS ADDRESS_INVOICE
  FROM dev_psas_db.RPT.T_CUST_ACCT_ADDR_HIST
  WHERE ADDR_TYP_CD IN ('M') 
    AND LAST_EFF_DT > CURRENT_TIMESTAMP()
) TEMP
ON A.CUST_ACCT_ID = TEMP.CUST_ACCT_ID
WHEN MATCHED AND (A.ADDR_INVOICE IS NULL OR A.ADDR_INVOICE <> TEMP.ADDRESS_INVOICE) THEN
  UPDATE SET A.ADDR_INVOICE = TEMP.ADDRESS_INVOICE;

-- COMMAND ----------

-- UPDATE SHIP TO ADDRESS
MERGE INTO psas_di_dev.`340b_gold`.T_PHS_AUDIT_PART1 A
USING (
  SELECT CUST_ACCT_ID, ADDR_L1 || ', ' || CTY_NAM || ', ' || ST_CD || ' ' || ZIP_CD AS ADDRESS_DELVRY
  FROM dev_psas_db.RPT.T_CUST_ACCT_ADDR_HIST
  WHERE ADDR_TYP_CD IN ('D') AND LAST_EFF_DT > CURRENT_TIMESTAMP()
) TEMP
ON A.CUST_ACCT_ID = TEMP.CUST_ACCT_ID
WHEN MATCHED AND (A.ADDR_DELIVERY IS NULL OR A.ADDR_DELIVERY <> TEMP.ADDRESS_DELVRY) THEN
  UPDATE SET A.ADDR_DELIVERY = TEMP.ADDRESS_DELVRY;

-- COMMAND ----------

-- DEA NUM
MERGE INTO psas_di_dev.`340b_gold`.T_PHS_AUDIT_PART1 A
USING dev_psas_db.RPT.T_IW_CUST_ACCT CA
ON A.CUST_ACCT_ID = CA.CUST_ACCT_ID
WHEN MATCHED AND (A.DEA_NUM IS NULL OR A.DEA_NUM <> CA.DEA_NUM)
THEN UPDATE SET A.DEA_NUM = CA.DEA_NUM;

-- COMMAND ----------

-- BUS TYPE
UPDATE psas_di_dev.`340b_gold`.T_PHS_AUDIT_PART1 A
SET A.BUS_TYP_CD = (
    SELECT max(CA.SAP_BUS_TYP_CD)
    FROM dev_psas_db.RPT.T_IW_CUST_ACCT_EXT CA
    WHERE A.CUST_ACCT_ID = CA.CUST_ACCT_ID
)
WHERE A.BUS_TYP_CD IS NULL OR A.BUS_TYP_CD <> (
    SELECT max(CA.SAP_BUS_TYP_CD)
    FROM dev_psas_db.RPT.T_IW_CUST_ACCT_EXT CA
    WHERE A.CUST_ACCT_ID = CA.CUST_ACCT_ID
);

-- COMMAND ----------

-- RX BILL PLAN
UPDATE psas_di_dev.`340b_gold`.T_PHS_AUDIT_PART1 A
SET A.RX_BILL_PLAN = (
    SELECT max(COGS.RX_BILL_PLAN_CD)
    FROM dev_psas_db.RPT.T_CUST_BILL_PLAN COGS
    WHERE A.CUST_ACCT_ID = COGS.CUST_ACCT_ID
    AND (A.RX_BILL_PLAN IS NULL OR A.RX_BILL_PLAN <> COGS.RX_BILL_PLAN_CD)
)
WHERE EXISTS (
    SELECT 1
    FROM dev_psas_db.RPT.T_CUST_BILL_PLAN COGS
    WHERE A.CUST_ACCT_ID = COGS.CUST_ACCT_ID
    AND (A.RX_BILL_PLAN IS NULL OR A.RX_BILL_PLAN <> COGS.RX_BILL_PLAN_CD)
);

-- COMMAND ----------

-- GPO ID
UPDATE psas_di_dev.`340b_gold`.T_PHS_AUDIT_PART1 A
SET A.GPO_ID = (
    SELECT max(V.MCK_KU_GPOS)
    FROM dev_psas_db.RPT.T_DM_VSTX_CUST V
    WHERE A.CUST_ACCT_ID = V.CUST_ACCT_ID
    AND (A.GPO_ID IS NULL OR A.GPO_ID <> V.MCK_KU_GPOS)
)
WHERE EXISTS (
    SELECT 1
    FROM dev_psas_db.RPT.T_DM_VSTX_CUST V
    WHERE A.CUST_ACCT_ID = V.CUST_ACCT_ID
    AND (A.GPO_ID IS NULL OR A.GPO_ID <> V.MCK_KU_GPOS)
);

-- COMMAND ----------

-- GPO ACCT
UPDATE psas_di_dev.`340b_gold`.T_PHS_AUDIT_PART1 A
SET A.GPO_ACCT = (
    SELECT max(V.MCK_KU_GPO_ACCT) 
    FROM dev_psas_db.RPT.T_DM_VSTX_CUST V
    WHERE A.CUST_ACCT_ID = V.CUST_ACCT_ID
    AND (A.GPO_ACCT IS NULL OR A.GPO_ACCT <> V.MCK_KU_GPO_ACCT)
)
WHERE EXISTS (
    SELECT 1
    FROM dev_psas_db.RPT.T_DM_VSTX_CUST V
    WHERE A.CUST_ACCT_ID = V.CUST_ACCT_ID
    AND (A.GPO_ACCT IS NULL OR A.GPO_ACCT <> V.MCK_KU_GPO_ACCT)
);

-- COMMAND ----------

-- SALES PERSON
MERGE INTO psas_di_dev.`340b_gold`.T_PHS_AUDIT_PART1 A
USING (
  SELECT 
    CA.CUST_ACCT_ID, 
    SP.SLSPRSN_1ST_NAM || ' ' || SP.SLSPRSN_LAST_NAM AS SALES_REP
  FROM 
    dev_psas_db.RPT.T_IW_CUST_ACCT CA 
  INNER JOIN 
    dev_psas_db.RPT.T_IW_SLSPRSN SP
  ON 
    CA.SLSPRSN_ID = SP.SLSPRSN_ID
) TEMP
ON A.CUST_ACCT_ID = TEMP.CUST_ACCT_ID
WHEN MATCHED AND (A.SALES_REP IS NULL OR A.SALES_REP <> TEMP.SALES_REP) THEN
  UPDATE SET A.SALES_REP = TEMP.SALES_REP;

-- COMMAND ----------

-- PREVIOUS MONTH'S SALES (NOT LAST MONTH OF SALES) (DYNAMIC "WHERE" CONDITION)
MERGE INTO psas_di_dev.`340b_gold`.T_PHS_AUDIT_PART1 A
USING (
    SELECT S.CUST_ACCT_ID AS CUST_ACCT_ID, 
           CAST(SUM(SLS_CR_AMT) AS FLOAT) AS TOTAL_NET_SALES 
    FROM dev_psas_db.RPT.T_NET_CUST_SALES S 
    INNER JOIN psas_di_dev.`340b_gold`.T_PHS_AUDIT_PART1 A
    ON S.CUST_ACCT_ID = A.CUST_ACCT_ID
    WHERE PROC_WRK_DT BETWEEN DATE_TRUNC('MONTH', ADD_MONTHS(CURRENT_TIMESTAMP(), -1)) 
                          AND LAST_DAY(ADD_MONTHS(CURRENT_TIMESTAMP(), -1)) 
    GROUP BY S.CUST_ACCT_ID
) TEMP
ON A.CUST_ACCT_ID = TEMP.CUST_ACCT_ID
WHEN MATCHED THEN 
UPDATE SET A.SALES_LSTMTH = TEMP.TOTAL_NET_SALES;

-- COMMAND ----------

-- CURRENT MONTH'S SALES (DYNAMIC "WHERE" CONDITION)
MERGE INTO psas_di_dev.`340b_gold`.T_PHS_AUDIT_PART1 A
USING (
  SELECT 
    S.CUST_ACCT_ID AS CUST_ACCT_ID, 
    CAST(SUM(SLS_CR_AMT) AS FLOAT) AS TOTAL_NET_SALES 
  FROM 
    dev_psas_db.RPT.T_NET_CUST_SALES S 
  INNER JOIN 
    psas_di_dev.`340b_gold`.T_PHS_AUDIT_PART1 A
  ON 
    S.CUST_ACCT_ID = A.CUST_ACCT_ID
  WHERE 
    PROC_WRK_DT BETWEEN DATE_TRUNC('MONTH', ADD_MONTHS(CURRENT_TIMESTAMP(), 0)) 
    AND LAST_DAY(ADD_MONTHS(CURRENT_TIMESTAMP(), 0)) 
  GROUP BY 
    S.CUST_ACCT_ID
) TEMP
ON A.CUST_ACCT_ID = TEMP.CUST_ACCT_ID
WHEN MATCHED THEN 
  UPDATE SET A.SALES_CURMTH = TEMP.TOTAL_NET_SALES;

-- COMMAND ----------


-- UPDATE_SAP
-- DATE WHEN ADDED TO TABLE; HOWEVER, EVERYTHING BEFORE 12/16 THE ACTIVATION DATE WAS USED
UPDATE psas_di_dev.340b_gold.T_PHS_AUDIT_PART1 A
SET A.UPDATE_SAP = CURRENT_TIMESTAMP()
WHERE A.UPDATE_SAP IS NULL AND A.ACTIVATION_DATE IS NOT NULL;

-- COMMAND ----------

MERGE INTO psas_di_dev.340b_gold.T_PHS_AUDIT_PART1 A
USING (
    SELECT S.CUST_ACCT_ID, MIN(INVC_OR_CRMEMO_DT) AS FIRST_ORDER_DATE
    FROM dev_psas_db.RPT.T_NET_CUST_SALES S
    INNER JOIN psas_di_dev.340b_gold.T_PHS_AUDIT_PART1 A ON S.CUST_ACCT_ID = A.CUST_ACCT_ID
    WHERE INVC_OR_CRMEMO_DT BETWEEN DATE_TRUNC('MONTH', ADD_MONTHS(CURRENT_TIMESTAMP(), -72)) AND LAST_DAY(ADD_MONTHS(CURRENT_TIMESTAMP(), 0))
    AND A.ACCT_CLASSIFICATION IN ('005', '004', '003')
    GROUP BY S.CUST_ACCT_ID
) TEMP1
ON A.CUST_ACCT_ID = TEMP1.CUST_ACCT_ID
WHEN MATCHED AND (A.FIRST_ORDER IS NULL OR A.FIRST_ORDER <> TEMP1.FIRST_ORDER_DATE)
AND A.ACTIVATION_DATE < TEMP1.FIRST_ORDER_DATE
THEN UPDATE SET A.FIRST_ORDER = TEMP1.FIRST_ORDER_DATE;

-- COMMAND ----------

MERGE INTO psas_di_dev.340b_gold.T_PHS_AUDIT_PART1 A
USING (
    SELECT S.CUST_ACCT_ID, MIN(INVC_OR_CRMEMO_DT) AS FIRST_ORDER_DATE
    FROM dev_psas_db.RPT.T_NET_CUST_SALES S
    INNER JOIN psas_di_dev.340b_gold.T_PHS_AUDIT_PART1 A ON S.CUST_ACCT_ID = A.CUST_ACCT_ID
    WHERE INVC_OR_CRMEMO_DT BETWEEN DATE_TRUNC('MONTH', ADD_MONTHS(CURRENT_TIMESTAMP(), -72)) AND LAST_DAY(ADD_MONTHS(CURRENT_TIMESTAMP(), 0))
    AND A.ACCT_CLASSIFICATION IN ('005', '004', '003')
    GROUP BY S.CUST_ACCT_ID
) TEMP1
ON A.CUST_ACCT_ID = TEMP1.CUST_ACCT_ID
WHEN MATCHED AND (A.FIRST_ORDER IS NULL OR A.FIRST_ORDER <> TEMP1.FIRST_ORDER_DATE)
AND A.ACTIVATION_DATE < TEMP1.FIRST_ORDER_DATE
THEN UPDATE SET A.FIRST_ORDER = TEMP1.FIRST_ORDER_DATE;

-- COMMAND ----------

-- can't find column name

MERGE INTO psas_di_dev.340b_gold.T_PHS_AUDIT_PART1 A
USING (
    SELECT S.CUST_ACCT_ID, MAX(PROC_WRK_DT) AS LAST_ORDER_DATE
    FROM dev_psas_db.RPT.T_NET_CUST_SALES S
    INNER JOIN psas_di_dev.340b_gold.T_PHS_AUDIT_PART1 A ON S.CUST_ACCT_ID = A.CUST_ACCT_ID
    WHERE PROC_WRK_DT BETWEEN DATE_TRUNC('MONTH', ADD_MONTHS(CURRENT_TIMESTAMP(), -150)) AND LAST_DAY(ADD_MONTHS(CURRENT_TIMESTAMP(), 0))
    AND A.ACCT_CLASSIFICATION IN ('005', '004', '003') AND A.CUST_CHN_ID <> '989' AND A.ACTIVE_CUST_ID = 'A'
    GROUP BY S.CUST_ACCT_ID
    HAVING CAST(SUM(SLS_CR_AMT) AS FLOAT) > 1
) TEMP1
ON A.CUST_ACCT_ID = TEMP1.CUST_ACCT_ID
WHEN MATCHED AND (A.LAST_ORDER IS NULL OR (A.LAST_ORDER <> TEMP1.LAST_ORDER_DATE AND A.LAST_ORDER < TEMP1.LAST_ORDER_DATE))
THEN UPDATE SET A.LAST_ORDER = TEMP1.LAST_ORDER_DATE;

-- Databricks notebook source

--------01 DQ_COMMENTS
DELETE FROM {interDBName}.{interSchemaName}.T_COMMENTS;

--------02 AQ_COMMENTS

INSERT INTO {interDBName}.{interSchemaName}.T_COMMENTS ( Account, COMMENTS, ZX_BLOCK, OPENED_FOR_RETURNS )
SELECT DISTINCT T_PHS_AUDIT.CUST_ACCT_ID AS Account, 
                T_PHS_AUDIT.COMMENTS, 
                T_PHS_AUDIT.ZX_BLOCK, 
                T_PHS_AUDIT.OPENED_FOR_RETURNS 
  FROM  psas_di_dev.340b_silver.T_PHS_AUDIT AS T_PHS_AUDIT
 WHERE (T_PHS_AUDIT.COMMENTS IS NOT Null OR T_PHS_AUDIT.ZX_BLOCK IS NOT Null OR T_PHS_AUDIT.OPENED_FOR_RETURNS IS NOT Null); 


-- COMMAND ----------

--------03 DQ_PHS_AUDIT

DELETE FROM  psas_di_dev.340b_silver.T_PHS_AUDIT;
--------04 AQ_PHS_AUDIT
INSERT INTO  psas_di_dev.340b_silver.T_PHS_AUDIT ( CUST_ACCT_ID, CUST_ACCT_NAME, ACCT_CLASSIFICATION, CUST_CHN_ID, CHAIN_NAM, NATIONAL_GRP_CD, NATIONAL_GRP_NAME, NATIONAL_SUBGRP_CD, NATIONAL_SUBGRP_NAME, REGION_CD, REGION_NAME, DELIVERY_DOC, DIST_CHANNEL, HOME_DC_ID, DC_NAME, PHS_340B_ID, PHS_340B_ID_NOSUFFIX, DEA_FAMILY, STATUS,UPDATE_SAP, MNC, COVERED_ENTITY_PRIMARY, CONTRACT_PHARMACY_NAME, CONTRACT_PHARMACY_PRIMARY, DSCSA_RECEIVED, ACTIVATION_DATE, ACCT_NAME_PHS, ENTITY_TYPE, AUDIT_GPO, AGREEMENT, AGREEMENT_EXPIRATION, CAN_NAM, AUDIT_GROUP_NAME, AUDIT_COMMENTS, AUDIT_STATUS, Returns_Matrix, SALES_ADMIN, MHS_SALES_REP, RX_COGS, OTC_COGS, COMMENTS, SALES_REP, SALES_LSTMTH, SALES_CURMTH, ADDR_DELIVERY, ADDR_INVOICE, DEA_NUM, BUS_TYP_CD, RX_BILL_PLAN, ROUTE, STOP, GPO_ID, GPO_ACCT, THIRD_PARTY_VENDOR, ZX_BLOCK, OPENED_FOR_RETURNS, UPDATE_ACTIVESTATUS, UPDATE_340BID, FIRST_ORDER, LAST_ORDER )
SELECT ADMIN_T_PHS_AUDIT.CUST_ACCT_ID, 
       ADMIN_T_PHS_AUDIT.CUST_ACCT_NAME, 
       ADMIN_T_PHS_AUDIT.ACCT_CLASSIFICATION, 
       ADMIN_T_PHS_AUDIT.CUST_CHN_ID, 
       ADMIN_T_PHS_AUDIT.CHAIN_NAM, 
       ADMIN_T_PHS_AUDIT.NATIONAL_GRP_CD, 
       ADMIN_T_PHS_AUDIT.NATIONAL_GRP_NAME, 
       ADMIN_T_PHS_AUDIT.NATIONAL_SUBGRP_CD, 
       ADMIN_T_PHS_AUDIT.NATIONAL_SUBGRP_NAME, 
       ADMIN_T_PHS_AUDIT.REGION_CD, 
       ADMIN_T_PHS_AUDIT.REGION_NAME, 
       ADMIN_T_PHS_AUDIT.DELIVERY_DOC, 
       ADMIN_T_PHS_AUDIT.DIST_CHANNEL, 
       ADMIN_T_PHS_AUDIT.HOME_DC_ID, 
       LUTL_SALES_ADMIN.Location AS DC_NAME, 
       ADMIN_T_PHS_AUDIT.PHS_340B_ID, 
       ADMIN_T_PHS_AUDIT.PHS_340B_ID, 
       ADMIN_T_PHS_AUDIT.DEA_FAMILY, 
       IFF(ACTIVE_CUST_IND = 'A','ACTIVE','INACTIVE') AS STATUS, 
       ADMIN_T_PHS_AUDIT.UPDATE_SAP, 
       '' AS MNC, 
       T_Pharmacy_Type_Data.CE_Primary AS COVERED_ENTITY_PRIMARY,
       T_Pharmacy_Type_Data.Pharmacy_Name AS CONTRACT_PHARMACY_NAME,
       T_Pharmacy_Type_Data.CP_Primary AS CONTRACT_PHARMACY_PRIMARY, 
       T_Pharmacy_Type_Data.DSCSA_RECEIVED, ADMIN_T_PHS_AUDIT.ACTIVATION_DATE, 
       'N' AS ACCT_NAME_PHS, 
       ADMIN_T_PHS_AUDIT.ENTITY_TYPE,
       T_Quarterly_Audit_Data.GPO AS AUDIT_GPO,
       T_Quarterly_Audit_Data.Agreement, 
       T_Quarterly_Audit_Data.Agreement_Expiration, 
       (CASE WHEN T_Quarterly_Audit_Data.CAN_NAME <> '-' THEN T_Quarterly_Audit_Data.CAN_NAME ELSE '' END) AS CAN_NAM, 
       T_Quarterly_Audit_Data.GROUP_NAME AS AUDIT_GROUP_NAME, 
       T_Quarterly_Audit_Data.COMMENTS AS AUDIT_COMMENTS, 
       T_Quarterly_Audit_Data.AUDIT_STATUS, 
       T_Quarterly_Audit_Data.Returns_Matrix,
       LUTL_SALES_ADMIN.Sales_Admin, 
       LUTL_SALES_ADMIN.MHS_Sales AS MHS_SALES_REP, 
       ADMIN_T_PHS_AUDIT.COGS_RX AS RX_COGS, 
       ADMIN_T_PHS_AUDIT.COGS_OTC AS OTC_COGS, 
       T_COMMENTS.COMMENTS, 
       ADMIN_T_PHS_AUDIT.SALES_REP, 
       ADMIN_T_PHS_AUDIT.SALES_LSTMTH, 
       ADMIN_T_PHS_AUDIT.SALES_CURMTH, 
       ADMIN_T_PHS_AUDIT.ADDR_DELIVERY,
       ADMIN_T_PHS_AUDIT.ADDR_INVOICE, 
       ADMIN_T_PHS_AUDIT.DEA_NUM,
       ADMIN_T_PHS_AUDIT.BUS_TYP_CD, 
       ADMIN_T_PHS_AUDIT.RX_BILL_PLAN, 
       ADMIN_T_PHS_AUDIT.DLVRY_RTE_NUM,
       ADMIN_T_PHS_AUDIT.DLVRY_RTE_STOP_NUM, 
       ADMIN_T_PHS_AUDIT.GPO_ID, 
       ADMIN_T_PHS_AUDIT.GPO_ACCT,
       T_TPV.Vendor_Name AS THIRD_PARTY_VENDOR, 
       T_COMMENTS.ZX_BLOCK, T_COMMENTS.OPENED_FOR_RETURNS,
       ADMIN_T_PHS_AUDIT.UPDATE_ACTIVESTATUS, 
       ADMIN_T_PHS_AUDIT.UPDATE_340BID, 
       ADMIN_T_PHS_AUDIT.FIRST_ORDER, 
       ADMIN_T_PHS_AUDIT.LAST_ORDER
  FROM V_ADMIN_T_PHS_AUDIT AS ADMIN_T_PHS_AUDIT 
       LEFT JOIN  psas_di_dev.340b_silver.T_LUTL_SALES_ADMIN AS LUTL_SALES_ADMIN ON ADMIN_T_PHS_AUDIT.HOME_DC_ID = LUTL_SALES_ADMIN.DC 
       LEFT JOIN {interDBName}.{interSchemaName}.T_COMMENTS AS T_COMMENTS ON ADMIN_T_PHS_AUDIT.CUST_ACCT_ID = T_COMMENTS.Account
       LEFT JOIN  psas_di_dev.340b_silver.T_QUARTERLY_AUDIT_DATA AS T_Quarterly_Audit_Data ON ADMIN_T_PHS_AUDIT.CUST_ACCT_ID = T_Quarterly_Audit_Data.Cust_Acct_ID 
       LEFT JOIN  psas_di_dev.340b_silver.T_PHARMACY_TYPE_DATA AS T_PHARMACY_TYPE_DATA ON ADMIN_T_PHS_AUDIT.CUST_ACCT_ID = T_Pharmacy_Type_Data.Cust_Acct
       LEFT JOIN {interDBName}.{interSchemaName}.T_PHS_MEMBERSHIPROSTER_MEMBERS AS T_PHS_MembershipRoster_Members ON ADMIN_T_PHS_AUDIT.CUST_ACCT_ID = T_PHS_MembershipRoster_Members."CUST_ACCT_ID" 
       LEFT JOIN  psas_di_dev.340b_silver.T_TPV AS T_TPV ON T_PHS_MembershipRoster_Members.THIRD_PARTY_VENDOR = T_TPV.TPV
 WHERE (((ADMIN_T_PHS_AUDIT.CUST_ACCT_ID) Is Not Null));

-- COMMAND ----------

-------05 DQ_RemoveTemplateAccounts
DELETE T_PHS_AUDIT.CUST_ACCT_NAME, REGEXP_INSTR(CUST_ACCT_NAME," TEMPLATE") AS Expr1
FROM  psas_di_dev.340b_silver.T_PHS_AUDIT
WHERE (CHARINDEX(' TEMPLATE',CUST_ACCT_NAME)>0);
 

-- COMMAND ----------

-------06 UQ_EntityType
UPDATE  psas_di_dev.340b_silver.T_PHS_AUDIT AS T_PHS_AUDIT
   SET T_PHS_AUDIT.ENTITY_TYPE = Left(PHS_340B_ID,2)
 WHERE Left(PHS_340B_ID,3) IN ('CH0','CH1')
    OR Left(PHS_340B_ID,2) IN ('FP','HM','HV','NH','TB','UI','RW');

-- COMMAND ----------

-------707 UQ_EntityTypeName
UPDATE  psas_di_dev.340b_silver.T_PHS_AUDIT AS T_PHS_AUDIT 
   SET T_PHS_AUDIT.ENTITY_TYPE_NAME = ENTITY_NAME
  FROM  psas_di_dev.340b_silver.T_LUTL_ENTITY AS LUTL_ENTITY
 WHERE T_PHS_AUDIT.ENTITY_TYPE = LUTL_ENTITY.ENTITY_TYPE;

-- COMMAND ----------


-------08 UQ_Acct_Name_PHS
UPDATE  psas_di_dev.340b_silver.T_PHS_AUDIT AS T_PHS_AUDIT
SET T_PHS_AUDIT.ACCT_NAME_PHS = 'Y'
WHERE (CHARINDEX(' PHS',CUST_ACCT_NAME)>0) OR
      ((CHARINDEX('PHS',CUST_ACCT_NAME)>0) AND (Left(CUST_ACCT_NAME,5)<>'USPHS') AND (CHARINDEX('JOSEPHS',CUST_ACCT_NAME)=0));

-- COMMAND ----------

-------10 UQ_340B_ID_RemoveDash
UPDATE  psas_di_dev.340b_silver.T_PHS_AUDIT AS T_PHS_AUDIT 
   SET T_PHS_AUDIT.PHS_340B_ID_NOSUFFIX = Left(PHS_340B_ID_NOSUFFIX,CHARINDEX('-',PHS_340B_ID_NOSUFFIX)-1)
WHERE (( T_PHS_AUDIT.PHS_340B_ID_NOSUFFIX Is Not Null And T_PHS_AUDIT.PHS_340B_ID_NOSUFFIX <> '') AND ((CHARINDEX('-',PHS_340B_ID_NOSUFFIX))>0));

-- COMMAND ----------

-------11 UQ_340B_ID_RemoveLetter1   ------Note: This query is currently executed 3 times in succession to remove any letters at the end of 340B ID values.
UPDATE  psas_di_dev.340b_silver.T_PHS_AUDIT AS T_PHS_AUDIT
   SET T_PHS_AUDIT.PHS_340B_ID_NOSUFFIX = Left(PHS_340B_ID_NOSUFFIX,Len(PHS_340B_ID_NOSUFFIX)-1)
 WHERE (((T_PHS_AUDIT.PHS_340B_ID_NOSUFFIX) Is Not Null And (T_PHS_AUDIT.PHS_340B_ID_NOSUFFIX)<>'') AND ((REGEXP_LIKE(Right(PHS_340B_ID_NOSUFFIX,1),'[0-9]') )=false)); 

-- COMMAND ----------

------SubGroups
CREATE OR REPLACE VIEW V_SUBGROUPS AS
SELECT DISTINCT 
       Chains.Chain || (CASE WHEN TRIM(NATIONAL_SUBGRP_CD)<> '' THEN NATIONAL_SUBGRP_CD ELSE '000000' END) AS Chain_SG, 
       T_PHS_AUDIT.NATIONAL_GRP_CD, 
       Chains.Chain, 
       T_PHS_AUDIT.CHAIN_NAM, 
       (CASE WHEN Trim(NATIONAL_SUBGRP_CD)<> '' THEN NATIONAL_SUBGRP_CD ELSE '000000' END) AS Sub_Group, 
       T_PHS_AUDIT.NATIONAL_SUBGRP_NAME, 
       T_PHS_AUDIT.STATUS
 FROM  psas_di_dev.340b_silver.T_CHAINS AS Chains INNER JOIN  psas_di_dev.340b_silver.T_PHS_AUDIT AS T_PHS_AUDIT ON Chains.Chain = T_PHS_AUDIT.CUST_CHN_ID
WHERE UPPER(T_PHS_AUDIT.STATUS)='ACTIVE';

-- COMMAND ----------

------12 AQ_Update_PVP_Coding_Table -- Need to check with Praveen 
INSERT INTO  psas_di_dev.340b_silver.T_LUTL_PVP_CODING ( CODING, PVP_CODING, NATL_GRP, CHAIN, CHAIN_NAME, SUB_GROUP, SUB_GROUP_NAME )
SELECT SubGroups.Chain_SG, 
       'Y' AS PVP_Coding, 
       SubGroups.NATIONAL_GRP_CD AS Natl_Grp,
       SubGroups.Chain, SubGroups.CHAIN_NAM AS Chain_Name,
       SubGroups.Sub_Group AS Sub_Group,
       SubGroups.NATIONAL_SUBGRP_NAME AS Sub_Group_Name
FROM V_SUBGROUPS AS SubGroups LEFT JOIN  psas_di_dev.340b_silver.T_LUTL_PVP_CODING AS LUPVCOD ON SubGroups.Chain_SG = LUPVCOD.Coding
WHERE LUPVCOD.ID Is Null;

-- COMMAND ----------

------13 UQ_PVP_Code
UPDATE  psas_di_dev.340b_silver.T_PHS_AUDIT AS T_PHS_AUDIT
   SET T_PHS_AUDIT.PVP_CODE = CUST_CHN_ID || (case when Trim(NATIONAL_SUBGRP_CD)<>'' then NATIONAL_SUBGRP_CD else '000000' end)
 WHERE (T_PHS_AUDIT.ACCT_CLASSIFICATION='003' Or T_PHS_AUDIT.ACCT_CLASSIFICATION in ('004','005')) OR (T_PHS_AUDIT.NATIONAL_GRP_CD='0240' 
                                                                                                  AND UPPER(T_PHS_AUDIT.STATUS)='ACTIVE');

-- COMMAND ----------

--------14 UQ_PVP_Coding

/*UPDATE T_PHS_AUDIT_TEST AS T_PHS_AUDIT
   SET T_PHS_AUDIT.PVP_CODING = (CASE WHEN T2.PVP_CODING = 'Y' THEN 'Y' ELSE 'N' END)
  FROM T_PHS_AUDIT T1 LEFT JOIN LUTL_PVP_CODING T2 ON T1.PVP_CODE = T2.Coding
 WHERE ((T_PHS_AUDIT.ACCT_CLASSIFICATION='003' Or T_PHS_AUDIT.ACCT_CLASSIFICATION in ('004','005')) OR (T_PHS_AUDIT.NATIONAL_GRP_CD='0240'))
   AND T_PHS_AUDIT.PVP_CODE = T1.PVP_CODE;
*/


-- COMMAND ----------

UPDATE  psas_di_dev.340b_silver.T_PHS_AUDIT AS T_PHS_AUDIT
   SET T_PHS_AUDIT.PVP_CODING = T1.PVP_CODING
 FROM (SELECT DISTINCT T_PHS_AUDIT.PVP_CODE, (CASE WHEN LUTL_PVP_CODING.PVP_CODING = 'Y' THEN 'Y' ELSE 'N' END)  AS PVP_CODING 
         FROM  psas_di_dev.340b_silver.T_PHS_AUDIT AS T_PHS_AUDIT LEFT JOIN  psas_di_dev.340b_silver.T_LUTL_PVP_CODING AS LUTL_PVP_CODING ON T_PHS_AUDIT.PVP_CODE = LUTL_PVP_CODING.Coding 
        WHERE ((T_PHS_AUDIT.ACCT_CLASSIFICATION='003' Or T_PHS_AUDIT.ACCT_CLASSIFICATION in ('004','005')) OR (T_PHS_AUDIT.NATIONAL_GRP_CD='0240')) )T1
 WHERE T_PHS_AUDIT.PVP_CODE = T1.PVP_CODE;

-- COMMAND ----------

--------14b UQ_PVP_Coding_IndianServices
UPDATE  psas_di_dev.340b_silver.T_PHS_AUDIT AS T_PHS_AUDIT
   SET T_PHS_AUDIT.PVP_CODING = 'N'
 WHERE T_PHS_AUDIT.CUST_CHN_ID='784' AND T_PHS_AUDIT.REGION_CD='000002';

-- COMMAND ----------

---------15 UQ_MNC_A34
UPDATE  psas_di_dev.340b_silver.T_PHS_AUDIT AS T_PHS_AUDIT
   SET T_PHS_AUDIT.MNC = 'A34'
  FROM  psas_di_dev.340b_silver.T_MNC_PHS AS MNC_PHS
 WHERE MNC_PHS.CUSTOMER = T_PHS_AUDIT.CUST_ACCT_ID 
   AND MNC_PHS.MEM='A34';

-- COMMAND ----------

--------16 UQ_MNC_C34
UPDATE  psas_di_dev.340b_silver.T_PHS_AUDIT AS T_PHS_AUDIT
   SET T_PHS_AUDIT.MNC = MNC || 'C34'
  FROM  psas_di_dev.340b_silver.T_MNC_PHS AS MNC_PHS 
 WHERE MNC_PHS.Customer = T_PHS_AUDIT.CUST_ACCT_ID 
   AND MNC_PHS.Mem='C34';


-- COMMAND ----------

-------20 UQ_ACM
UPDATE  psas_di_dev.340b_silver.T_PHS_AUDIT AS T_PHS_AUDIT
   SET T_PHS_AUDIT.ACM_NAME = Nat_Grp.ACM
  FROM  psas_di_dev.340b_silver.T_Nat_Grp AS Nat_Grp 
 WHERE T_PHS_AUDIT.CUST_ACCT_ID = Nat_Grp.CUSID ;

-- COMMAND ----------

-------21 Q_UpdateActiveStatus

CREATE OR REPLACE VIEW V_UPDATEACTIVESTATUS_21  AS 
SELECT T_PHS_AUDIT.CUST_ACCT_ID, T_PHS_AUDIT.CUST_ACCT_NAME, T_PHS_AUDIT.ACCT_CLASSIFICATION, T_PHS_AUDIT.STATUS, T_PHS_AUDIT.UPDATE_ACTIVESTATUS
FROM  psas_di_dev.340b_silver.T_PHS_AUDIT AS T_PHS_AUDIT
WHERE (((T_PHS_AUDIT.UPDATE_ACTIVESTATUS) Is Not Null)); 

-- COMMAND ----------

------22 AQ_UpdateActiveStatus
INSERT INTO  psas_di_dev.340b_silver.T_ACTIVESTATUSUPDATE ( CUST_ACCT_ID, CUST_ACCT_NAME, ACCT_CLASS, STATUS, ACTIVE_STATUS_UPDATE )
SELECT DISTINCT 
       V_UPDATEACTIVESTATUS_21.CUST_ACCT_ID, 
       V_UPDATEACTIVESTATUS_21.CUST_ACCT_NAME, 
       V_UPDATEACTIVESTATUS_21.ACCT_CLASSIFICATION,
       V_UPDATEACTIVESTATUS_21.STATUS,
       V_UPDATEACTIVESTATUS_21.UPDATE_ACTIVESTATUS
FROM V_UPDATEACTIVESTATUS_21 LEFT JOIN  psas_di_dev.340b_silver.T_ACTIVESTATUSUPDATE AS T_ACTIVESTATUSUPDATE ON V_UPDATEACTIVESTATUS_21.CUST_ACCT_ID = T_ACTIVESTATUSUPDATE.CUST_ACCT_ID 
     AND (V_UPDATEACTIVESTATUS_21.UPDATE_ACTIVESTATUS = T_ACTIVESTATUSUPDATE.ACTIVE_STATUS_UPDATE)
WHERE (T_ACTIVESTATUSUPDATE.CUST_ACCT_ID IS Null AND T_ACTIVESTATUSUPDATE.ACTIVE_STATUS_UPDATE IS Null);


-- COMMAND ----------


------00 MCR_HRSA_UPDATE_DATA
------Note: Currently, 01 DQ_HRSA is repeated at the end of this sequence to conserve space on MS-Access application.
---1. OpenQuery: 01 DQ_HRSA
---2. OpenQuery: 02 AQ_HRSA
---3. OpenQuery: 03 UQ_HRSA_SelectRecordsForDelete
---4. OpenQuery: 04 DQ_HRSA_DeleteSelectedRecords
---5. OpenQuery: 05 UQ_HRSA_ClearFields
---6. OpenQuery: 06 UQ_CoveredEntityName
---7. OpenQuery: 01 DQ_HRSA
--DESC TABLE T_HRSA;
----01 DQ_HRSA
DELETE FROM {interDBName}.{interSchemaName}.T_HRSA;

-- COMMAND ----------

---02 AQ_HRSA
--OPACE_DAILY_PUBLIC ---Rename as T_OPACE_DAILY_PUBLIC
INSERT INTO {interDBName}.{interSchemaName}.T_HRSA ( PHS_340B_ID, HRSA_START_DATE, HRSA_TERM_DATE, COVERED_ENTITY, Address, City, State, Zip )
SELECT DISTINCT 
         ODP.ID_340B AS PHS_340B_ID,
         TO_TIMESTAMP_NTZ(ODP.PARTICIPATING_START_DATE) AS HRSA_START_DATE,
         TO_TIMESTAMP_NTZ(IFF(ODP.TERM_DATE='',NULL,ODP.TERM_DATE)) AS HRSA_TERM_DATE,
         ODP.ENTITY_NAME AS COVERED_ENTITY,
         ODP.ADDRESS_1 AS ADDRESS,
         ODP.CITY, 
         ODP.STATE,
         ODP.ZIP
  FROM PRD_ENT_DL_US_EXT_340B_DB.RAWDATA.OPACE_DAILY_PUBLIC AS ODP;


-- COMMAND ----------

---03 UQ_HRSA_SelectRecordsForDelete
UPDATE {interDBName}.{interSchemaName}.T_HRSA AS T_HRSA 
SET T_HRSA."DELETE" = 1
WHERE NOT EXISTS (SELECT 1 FROM  psas_di_dev.340b_silver.T_PHS_AUDIT AS T_PHS_AUDIT WHERE T_HRSA.PHS_340B_ID = T_PHS_AUDIT.PHS_340B_ID);

-- COMMAND ----------

---04 DQ_HRSA_DeleteSelectedRecords
DELETE FROM {interDBName}.{interSchemaName}.T_HRSA AS T_HRSA WHERE T_HRSA."DELETE" = 1;
---05 UQ_HRSA_ClearFields
UPDATE  psas_di_dev.340b_silver.T_PHS_AUDIT AS T_PHS_AUDIT
   SET T_PHS_AUDIT.HRSA_START_DATE = '', T_PHS_AUDIT.HRSA_TERM_DATE = ''
WHERE (((T_PHS_AUDIT.HRSA_START_DATE) Is Not Null)) OR (((T_PHS_AUDIT.HRSA_TERM_DATE) Is Not Null));

-- COMMAND ----------

---06 UQ_CoveredEntityName
UPDATE  psas_di_dev.340b_silver.T_PHS_AUDIT AS T_PHS_AUDIT
   SET T_PHS_AUDIT.HRSA_START_DATE = T_HRSA.HRSA_START_DATE, 
       T_PHS_AUDIT.HRSA_TERM_DATE = T_HRSA.HRSA_TERM_DATE, 
       T_PHS_AUDIT.COVERED_ENTITY_NAME = T_HRSA.COVERED_ENTITY
  FROM {interDBName}.{interSchemaName}.T_HRSA AS T_HRSA
 WHERE T_PHS_AUDIT.PHS_340B_ID = T_HRSA.PHS_340B_ID; 

-- COMMAND ----------

---00 MCR_PVP_REPORT_UPDATE_DATA
---1. OpenQuery: 01 DQ_PVP_REPORT
---2. OpenQuery: 02 AQ_PVP_REPORT
---3. OpenQuery: 03 UQ_PVP_Report_Clear
---4. OpenQuery: 04 UQ_PVP_Report
---5. OpenQuery: 05 DQ_PVP_Report_ParentMatch
---6. OpenQuery: 06 AQ_PVP_Report_ParentMatch
---7. OpenQuery: 07 UQ_PVP_Report_ParentMatch

-- COMMAND ----------

---00 Q_PVP_REPORT ---- Need to check behaviour in MS Access 
CREATE OR REPLACE VIEW V_PVP_REPORT_00 AS 
SELECT DISTINCT TRIM(PVRPT.PVP_340B_ID) AS PVP_340B_ID, 
                PVRPT.PVP_MEMBER_NAME, 
                PVRPT.PVP_PARTICIPANT_ID,
                PVRPT.PVP_PARTICIPATION_FLAG,
                PVRPT.PVP_EFFECTIVE_DATE, 
                PVRPT.PVP_EXPIRATION_DATE, 
                TO_DATE(IFF(LEN(PVRPT.HRSA_MEMBER_DATE) >= 8 AND LEN(PVRPT.HRSA_MEMBER_DATE) <= 10, 
				PVRPT.HRSA_MEMBER_DATE,
				SUBSTRING(PVRPT.HRSA_MEMBER_DATE,1, CHARINDEX(' ',PVRPT.HRSA_MEMBER_DATE)-1)
				)) AS HRSA_MEMBER_DATE,
                PVRPT.PVP_CITY, 
                PVRPT.PVP_STATE
FROM  psas_di_dev.340b_silver.T_PVP_REPORT AS PVRPT;

-- COMMAND ----------


---01 DQ_PVP_REPORT
DELETE FROM {interDBName}.{interSchemaName}.T_MT_PVP_REPORT;
---02 AQ_PVP_REPORT
INSERT INTO {interDBName}.{interSchemaName}.T_MT_PVP_REPORT ( PVP_340B_ID, PVP_MEMBER_NAME, PVP_PARTICIPANT_ID, PVP_PARTICIPATION_FLAG, PVP_EFFECTIVE_DATE, PVP_EXPIRATION_DATE, PVP_CITY, PVP_STATE )
SELECT DISTINCT 
       V_PVP_REPORT_00.PVP_340B_ID,
       V_PVP_REPORT_00.PVP_MEMBER_NAME, 
       V_PVP_REPORT_00.PVP_PARTICIPANT_ID, 
       IFF((UPPER(V_PVP_REPORT_00.PVP_PARTICIPATION_FLAG)='TRUE' OR V_PVP_REPORT_00.PVP_PARTICIPATION_FLAG='Y'),'Y','N') AS PVP_PARTICIPATION_FLAG,
       V_PVP_REPORT_00.PVP_EFFECTIVE_DATE,
       V_PVP_REPORT_00.PVP_EXPIRATION_DATE, 
       V_PVP_REPORT_00.PVP_CITY, 
       V_PVP_REPORT_00.PVP_STATE 
FROM V_PVP_REPORT_00 INNER JOIN  psas_di_dev.340b_silver.T_PHS_AUDIT AS T_PHS_AUDIT ON V_PVP_REPORT_00.PVP_340B_ID = T_PHS_AUDIT.PHS_340B_ID;

-- COMMAND ----------

---03 UQ_PVP_Report_Clear
UPDATE  psas_di_dev.340b_silver.T_PHS_AUDIT AS T_PHS_AUDIT 
   SET T_PHS_AUDIT.PVP_MEMBER_NAME = '', 
       T_PHS_AUDIT.PVP_PARTICIPANT_ID = '', 
       T_PHS_AUDIT.PVP_PARTICIPATION_FLAG = 'N', 
       T_PHS_AUDIT.PVP_ELIGIBILITY_DATE = NULL, 
       T_PHS_AUDIT.PVP_EXPIRATION_DATE = NULL, 
       T_PHS_AUDIT.CE_CITY = '', 
       T_PHS_AUDIT.CE_STATE = '' 
 WHERE (((T_PHS_AUDIT.ACCT_CLASSIFICATION)='003' Or (T_PHS_AUDIT.ACCT_CLASSIFICATION) in ('004','005')));

-- COMMAND ----------

---04 UQ_PVP_Report
UPDATE  psas_di_dev.340b_silver.T_PHS_AUDIT AS T_PHS_AUDIT
   SET T_PHS_AUDIT.PVP_MEMBER_NAME = MT_PVP_REPORT.PVP_Member_Name, 
       T_PHS_AUDIT.PVP_PARTICIPANT_ID = MT_PVP_REPORT.PVP_Participant_ID, 
       T_PHS_AUDIT.PVP_PARTICIPATION_FLAG = MT_PVP_REPORT.PVP_Participation_Flag, 
       T_PHS_AUDIT.PVP_ELIGIBILITY_DATE = MT_PVP_REPORT.PVP_Effective_Date, 
       T_PHS_AUDIT.PVP_EXPIRATION_DATE = MT_PVP_REPORT.PVP_Expiration_Date, 
       T_PHS_AUDIT.CE_CITY = MT_PVP_REPORT.PVP_City, 
       T_PHS_AUDIT.CE_STATE = MT_PVP_REPORT.PVP_State 
  FROM {interDBName}.{interSchemaName}.T_MT_PVP_REPORT  AS MT_PVP_REPORT  
 WHERE T_PHS_AUDIT.PHS_340B_ID = MT_PVP_REPORT.PVP_340B_ID;

-- COMMAND ----------

---05 DQ_PVP_Report_ParentMatch
DELETE FROM  psas_di_dev.340b_silver.T_MT_PVP_REPORT_PARENTMATCH;

-- COMMAND ----------

---06 AQ_PVP_Report_ParentMatch --- Check logic with praveen
INSERT INTO  psas_di_dev.340b_silver.T_MT_PVP_REPORT_PARENTMATCH( PVP_340B_ID, PVP_MEMBER_NAME, PVP_PARTICIPANT_ID, PVP_PARTICIPATION_FLAG, PVP_EFFECTIVE_DATE, PVP_EXPIRATION_DATE )
SELECT DISTINCT 
       MT_PVP_REPORT.PVP_340B_ID, 
	   MT_PVP_REPORT_1.PVP_Member_Name, 
	   MT_PVP_REPORT_1.PVP_Participant_ID, 
	   MT_PVP_REPORT_1.PVP_Participation_Flag, 
	   MT_PVP_REPORT_1.PVP_Effective_Date, 
	   MT_PVP_REPORT_1.PVP_Expiration_Date
FROM ({interDBName}.{interSchemaName}.T_MT_PVP_REPORT AS MT_PVP_REPORT INNER JOIN  psas_di_dev.340b_silver.T_PHS_AUDIT AS T_PHS_AUDIT ON MT_PVP_REPORT.PVP_340B_ID = T_PHS_AUDIT.PHS_340B_ID) INNER JOIN {interDBName}.{interSchemaName}.T_MT_PVP_REPORT AS MT_PVP_REPORT_1 ON T_PHS_AUDIT.PHS_340B_ID_NOSUFFIX = MT_PVP_REPORT_1.PVP_340B_ID
WHERE (MT_PVP_REPORT_1.PVP_Participation_Flag='Y' AND MT_PVP_REPORT.PVP_Participation_Flag='N')
ORDER BY MT_PVP_REPORT.PVP_340B_ID;

-- COMMAND ----------

---07 UQ_PVP_Report_ParentMatch
UPDATE  psas_di_dev.340b_silver.T_PHS_AUDIT AS T_PHS_AUDIT 
   SET T_PHS_AUDIT.PVP_MEMBER_NAME = MT_PVP_REPORT_PARENTMATCH.PVP_MEMBER_NAME, 
	   T_PHS_AUDIT.PVP_PARTICIPANT_ID = MT_PVP_REPORT_PARENTMATCH.PVP_PARTICIPANT_ID, 
       T_PHS_AUDIT.PVP_PARTICIPATION_FLAG = MT_PVP_REPORT_PARENTMATCH.PVP_PARTICIPATION_FLAG, 
	   T_PHS_AUDIT.PVP_ELIGIBILITY_DATE = MT_PVP_REPORT_PARENTMATCH.PVP_EFFECTIVE_DATE, 
	   T_PHS_AUDIT.PVP_EXPIRATION_DATE = MT_PVP_REPORT_PARENTMATCH.PVP_EXPIRATION_DATE
  FROM  psas_di_dev.340b_silver.T_MT_PVP_REPORT_PARENTMATCH AS MT_PVP_REPORT_PARENTMATCH
 WHERE T_PHS_AUDIT.PHS_340B_ID = MT_PVP_REPORT_PARENTMATCH.PVP_340B_ID; 

-- COMMAND ----------

--Success
CREATE OR REPLACE VIEW V_SUCCESS AS select pi() * 2.0 * 2.0 as area_of_circle;
DROP VIEW IF EXISTS V_SUCCESS;

-- COMMAND ----------

INSERT INTO psas_di_dev.340b_silver.T_PHS_AUDIT
(
    PVP_CODING,
    MNC,
    ACM_NAME,
    HRSA_START_DATE,
    HRSA_TERM_DATE,
    COVERED_ENTITY_NAME,
    PVP_MEMBER_NAME,
    PVP_PARTICIPANT_ID,
    PVP_PARTICIPATION_FLAG,
    PVP_ELIGIBILITY_DATE,
    PVP_EXPIRATION_DATE,
    CE_CITY,
    CE_STATE
)
SELECT 
    -- For PVP_CODING: Based on CUST_CHN_ID and REGION_CD
    CASE 
        WHEN CUST_CHN_ID = '784' AND REGION_CD = '000002' THEN 'N'
        ELSE PVP_CODING
    END AS PVP_CODING,

    -- For MNC: Based on CUST_ACCT_ID and matching records in T_MNC_PHS
    CASE 
        WHEN MNC_PHS.MEM = 'A34' THEN 'A34'
        WHEN MNC_PHS.MEM = 'C34' THEN MNC_PHS.MNC || 'C34'
        ELSE MNC
    END AS MNC,

    -- For ACM_NAME: Based on matching CUST_ACCT_ID in T_Nat_Grp
    CASE 
        WHEN T_PHS_AUDIT.CUST_ACCT_ID = Nat_Grp.CUSID THEN Nat_Grp.ACM
        ELSE ACM_NAME
    END AS ACM_NAME,

    -- For HRSA fields: Based on matching PHS_340B_ID in T_HRSA
    CASE 
        WHEN T_PHS_AUDIT.PHS_340B_ID = T_HRSA.PHS_340B_ID THEN T_HRSA.HRSA_START_DATE
        ELSE HRSA_START_DATE
    END AS HRSA_START_DATE,
    
    CASE 
        WHEN T_PHS_AUDIT.PHS_340B_ID = T_HRSA.PHS_340B_ID THEN T_HRSA.HRSA_TERM_DATE
        ELSE HRSA_TERM_DATE
    END AS HRSA_TERM_DATE,

    CASE 
        WHEN T_PHS_AUDIT.PHS_340B_ID = T_HRSA.PHS_340B_ID THEN T_HRSA.COVERED_ENTITY
        ELSE COVERED_ENTITY_NAME
    END AS COVERED_ENTITY_NAME,

    -- For PVP fields: Based on ACCT_CLASSIFICATION and matching with PVP reports
    CASE 
        WHEN (T_PHS_AUDIT.ACCT_CLASSIFICATION = '003' OR T_PHS_AUDIT.ACCT_CLASSIFICATION IN ('004', '005')) THEN ''
        ELSE PVP_MEMBER_NAME
    END AS PVP_MEMBER_NAME,

    CASE 
        WHEN (T_PHS_AUDIT.ACCT_CLASSIFICATION = '003' OR T_PHS_AUDIT.ACCT_CLASSIFICATION IN ('004', '005')) THEN ''
        ELSE PVP_PARTICIPANT_ID
    END AS PVP_PARTICIPANT_ID,

    CASE 
        WHEN (T_PHS_AUDIT.ACCT_CLASSIFICATION = '003' OR T_PHS_AUDIT.ACCT_CLASSIFICATION IN ('004', '005')) THEN 'N'
        ELSE PVP_PARTICIPATION_FLAG
    END AS PVP_PARTICIPATION_FLAG,

    CASE 
        WHEN (T_PHS_AUDIT.ACCT_CLASSIFICATION = '003' OR T_PHS_AUDIT.ACCT_CLASSIFICATION IN ('004', '005')) THEN NULL
        ELSE PVP_ELIGIBILITY_DATE
    END AS PVP_ELIGIBILITY_DATE,

    CASE 
        WHEN (T_PHS_AUDIT.ACCT_CLASSIFICATION = '003' OR T_PHS_AUDIT.ACCT_CLASSIFICATION IN ('004', '005')) THEN NULL
        ELSE PVP_EXPIRATION_DATE
    END AS PVP_EXPIRATION_DATE,

    CASE 
        WHEN (T_PHS_AUDIT.ACCT_CLASSIFICATION = '003' OR T_PHS_AUDIT.ACCT_CLASSIFICATION IN ('004', '005')) THEN ''
        ELSE CE_CITY
    END AS CE_CITY,

    CASE 
        WHEN (T_PHS_AUDIT.ACCT_CLASSIFICATION = '003' OR T_PHS_AUDIT.ACCT_CLASSIFICATION IN ('004', '005')) THEN ''
        ELSE CE_STATE
    END AS CE_STATE

FROM 
    psas_di_dev.340b_silver.T_PHS_AUDIT AS T_PHS_AUDIT
LEFT JOIN 
    psas_di_dev.340b_silver.T_MNC_PHS AS MNC_PHS ON MNC_PHS.CUSTOMER = T_PHS_AUDIT.CUST_ACCT_ID
LEFT JOIN 
    psas_di_dev.340b_silver.T_Nat_Grp AS Nat_Grp ON T_PHS_AUDIT.CUST_ACCT_ID = Nat_Grp.CUSID
LEFT JOIN 
    {interDBName}.{interSchemaName}.T_HRSA AS T_HRSA ON T_PHS_AUDIT.PHS_340B_ID = T_HRSA.PHS_340B_ID
LEFT JOIN 
    {interDBName}.{interSchemaName}.T_MT_PVP_REPORT AS MT_PVP_REPORT ON T_PHS_AUDIT.PHS_340B_ID = MT_PVP_REPORT.PVP_340B_ID
LEFT JOIN 
    psas_di_dev.340b_silver.T_MT_PVP_REPORT_PARENTMATCH AS MT_PVP_REPORT_PARENTMATCH ON T_PHS_AUDIT.PHS_340B_ID = MT_PVP_REPORT_PARENTMATCH.PVP_340B_ID;

